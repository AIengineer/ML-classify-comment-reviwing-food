# -*- coding: utf-8 -*-
"""ML.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gxa7ZA2jlRoFcW7Jbud3c9BANnO_bFJI
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
if __name__== '__main__':
  train_X = pd.read_csv('/content/train.csv')
  text = train_X['class']
  class_0 =len(np.where(text == 0)[0])
  class_1 = len(text)- class_0
  x = np.array([class_0, class_1])
  print(class_0, class_1)
  plt.hist(text)

"""Data hoàn Toàn Imbalance. Ta thấy số dữ liệu của 2 class là gần bằng nhau

Ta thực hiện preprocess data trên 2 tập train/ test. Các quy tắc xử lý như sau :
- 1. Loại bỏ stop words: Những từ xuất hiện thường xuyên như ‘và’,  ‘của’,'này' v.v. nếu làm được. Loại bỏ vì chúng xuất hiện ở cả hai loại, không ảnh hưởng nhiều đến việc quyết định.
- 2. Loại bỏ non-words: các chữ số, dấu câu, và các ký tự đặc biệt đã được loại bỏ.
- 3. Đưa toàn bộ text về kiểu chữ thường
- 4. Loại bỏ 1 số data chưa làm sạch được
- 5. Mỗi word cũng chỉ được coi là 1 feature vì thế tôi có đề xuất là xóa bỏ tất cả các dấu trong từ. Word của chung ta bây giờ thành những từ như trong tiếng anh. Có 1 nhận xét thú vị rằng: Chúng ta phải loại bỏ hết dấu câu để quá trình lọc spam-ham được chính xác. Nhận thấy, trong tiếng việt, chỉ đánh dấu vào các chứ cái a,d,e,i,o,u,y nên ta sẽ cần loại bỏ dấu trong các chữ này (ở chữ d là trong trường hợp đ).
- 6. Sau đó tách tất cả các đoạn văn bản thành word. Thực hiện thống kê từ điển( ví dụ trên toàn bộ data từ {'thành': 100,...}. Lưu vào file dictionary.txt. Từ đó ta chọn bộ từ điển bao gồm những từ nào có tần suất xuất hiện trên giá trị mean của tần suất xuất hiện các từ trên toàn bộ dữ liệu

*** Từ đó tôi quyết định thực hiện trước với 100 điểm data.
Tức thành lập dictionary từ 100 điểm dữ liệu từ 0 -> 100
xong sau đó tôi sẽ chia ra thành 2 tập train set và validation set theo tỉ lệ 7:3
 
 Thực hiện kiểm tra trên 100 điểm dữ liệu còn lại có imbalance hay không.
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
if __name__== '__main__':
  train_X = pd.read_csv('/content/train.csv')
  text = train_X['class']
  text = text[:100]
  class_0 =len(np.where(text == 0)[0])
  class_1 = len(text)- class_0
  x = np.array([class_0, class_1])
  print(class_0, class_1)
  plt.hist(text)

"""Nhận xét dữ liệu trên 100 điểm đầu tiên cũng không imbalance

Ta thực hiện preprocess data trên 2 tập train/ test. Các quy tắc xử lý như sau :
- 1. Loại bỏ non-words: các chữ số, dấu câu, và các ký tự đặc biệt đã được loại bỏ.
- 2. Đưa toàn bộ text về kiểu chữ thường
- 3. Loại bỏ 1 số data chưa làm sạch được
- 4. Mỗi word cũng chỉ được coi là 1 feature vì thế tôi có đề xuất là xóa bỏ tất cả các dấu trong từ. Word của chung ta bây giờ thành những từ như trong tiếng anh. Có 1 nhận xét thú vị rằng: Chúng ta phải loại bỏ hết dấu câu để quá trình lọc spam-ham được chính xác. Nhận thấy, trong tiếng việt, chỉ đánh dấu vào các chứ cái a,d,e,i,o,u,y nên ta sẽ cần loại bỏ dấu trong các chữ này (ở chữ d là trong trường hợp đ).
- 5. Sau đó tách tất cả các đoạn văn bản thành word. Thực hiện thống kê từ điển( ví dụ trên toàn bộ data từ {'thành': 100,...}. Lưu vào file dictionary.txt. Từ đó ta chọn bộ từ điển bao gồm những từ nào có tần suất xuất hiện trên giá trị mean của tần suất xuất hiện các từ trên toàn bộ dữ liệu
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import nltk
from string import punctuation
from nltk.corpus import stopwords
from nltk.stem import SnowballStemmer
from nltk.tokenize import sent_tokenize, word_tokenize
import re
import time

t = time.time()
nltk.download('stopwords')
nltk.download('punkt')
def to_lower(text):
    return ' '.join([w.lower() for w in word_tokenize(text)])

def remove_(text):
  cleaned_text = re.sub('<[^<]+?>','', text)
  return cleaned_text
def remove_number(text):
  output = ''.join(c for c in text if not c.isdigit())
  return output
def remove_punctuation( text):
  return ''.join(c for c in text if c not in punctuation)
def remove_stop_word(text):
  stop_words = set(stopwords.words('english'))
  tokens = word_tokenize(text)
  result = [i for i in tokens if not i in stop_words]
  return result
def preprocess(text, f):
  i = 0
  dic = [0]
  while i < 10000:
    print(i)
    text[i] = str(text[i])
    text[i] = to_lower(text[i])
    text[i] = remove_(text[i])
    text[i] = remove_number(text[i])
    text[i] = remove_punctuation( text[i])
    text[i] = remove_stop_word(text[i])
    #tokenizer = keras.preprocessing.text.Tokenizer(filters='!"#$%&()*+,-./:;<=>?@[\]^`{|}💕~😂')
    #tokenizer.fit_on_texts(text[i])
    #text[i] = tokenizer.word_index
    #d = text[i]
    #length = len(d)
    #text[i] = np.array(d)
    #text[i] = np.array(list(d.keys()))
    j = 0
    while j < len(text[i]):
      t = text[i]
      t[j] = convert(t[j])
      if t[j] not in dic:
        f.write(t[j]  + str(','))
        dic.append(t[j])
      j +=1
    text[i] = t
    i +=1
  return text, dic[1:]
def convert(text):
  output = text
  for regex, replace in patterns.items():
    output = re.sub(regex, replace, output)
    output = re.sub(regex.upper(), replace.upper(), output)
  return output
def dictionary(dic, text, f):
  i = 0
  j = 0
  while j < len(dic):
    count = 0
    while i < 10000:
      count += text[i].count(dic[j])
      i += 1
    f.write(str(count)+ str(','))
    i = 0
    j += 1
  return 0
if __name__== '__main__':
  f = open('/content/dictionary.txt', 'w')
  patterns = {
    '[áàạãảăắ ằẳ ẵ ặâấ ầ ẩ ẫ ậ]': 'a',
    '[đ]': 'd',
    '[ìíỉĩị]': 'i',
    '[òóỏõọôồ ố ổ ỗ ộơờớởỡợ]': 'o',
    '[éèẽẻẹêế ề ể ệễ ]': 'e', 
    '[ùúủũụưừứử ữự]': 'u',
    '[ỳýỷỹỵ]': 'y'
  }
  train_X = pd.read_csv('/content/train.csv')
  text = train_X['text']
  text, dic = preprocess(text, f)
  fre = dictionary(dic, text, f)
  f.close()

"""* Tôi lưu toàn bộ số từ tách ra và tầng xuất xuất hiện của nó vào file dictionary.txt
* Sau qua 1 số kĩ thuật replace của word tôi được định dạng các từ như mảng các chuổi như cell code phía dưới với biến dic là dictionary trong 100 điểm dữ liệu
biến fre là tầng số xuất hiện các từ đó
* Để giảm số chiều xuống của dictionary tôi tính mean của tần số xuất hiện các từ trong từ điển.
* Nếu từ nào có tần số xuất hiện cao hơn hoặc bằng giá trị mean đó thì tôi giữ lại và được 1 từ điển hoàn chỉnh. Có thể  điều chỉnh độ dài dictionary nhưng hiện tại tôi chỉ mang đến phương án lấy mean của tần xuất các từ.
* Vì không có thời gian chạy models nên bộ từ điển này của tôi chỉ được xây dựng từ 10000 điểm dữ liệu
"""

import numpy as np
dic = ['den','quan','lan','thoi','rat','la','thich','tuy','nam','trong','hem','nhung','de','tim','rong','rai','thoang','mat','sach','se','nhan','vien','phuc','vu','nhiet','tinh','sieu','thuong','thuc','don','phong','phu','da','dang','gia','re','an','nem','hop','khau','vi','ngon','mieng','desert','ngot','vua','khong','qua','ngay','tra','sua','uyen','uong','thom','va','dung','minh','tung','o','hongkong','noi','chung','diem','cho','chat','luong','lam','vao','toi','chu','nhat','co','band','hat','kha','on','nhien','gian','tang','hoi','hep','ngoi','ca','ra','via','he','do','ko','lamz','lau','mac','du','khach','vang','doi','gan','p','moi','mang','duoc','ly','phe','ong','nay','chi','kheo','quang','ba','voi','chac','quay','lai','nua','be','ti','choi','dong','nguoi','nen','chua','tot','binh','dac','biet','khi','gi','sac','order','dat','banh','thi','su','tiep','dai','tu','van','chuyen','gui','tuyet','beo','rau','cau','pham','sau','dip','sinh','mau','lon','chuc','cac','ban','phat','day','thu','n','ma','gio','review','luc','nao','cung','chay','vo','nghiep','luon','chien','them','vat','dia','dua','chia','k','truoc','nha','chinh','riet','roi','duong','ben','com','tam','lun','trien','ghe','gom','dep','nhac','hay','art','buoc','lien','buoi','sang','hom','di','a','bac','xiu','yen','nhu','vay','dinh','tren','cuon','note','bu','thiet','danh','ghi','ki','niem','cua','rieng','nhieu','ve','hi','khen','mai','cha','che','gemini','bao','òy','dj','len','noc','luonnn','cap','tuc','h','xuong','tri','bai','cat','khu','xoa','bar','cocktails','pha','dan','bung','lua','het','pub','thay','chang','khac','chiu','hon','tru','dim','thui','nho','trog','ai','nu','deu','cay','hoa','hong','to','mog','cuoi','hoai','dau','nhom','canh','nhin','cach','mot','cai','ke','giong','nghi','tha','neu','sot','cam','vui','ngoai','cf','may','lanh','hut','thuoc','so','phi','le','bau','olong','trua','bò','bun','que','vai','cong','còn','suot','keu','dem','nuoc','leo','nau','bo','te','lat','can','sao','ay','lo','tay','rot','nap','sate','tien','tc','buc','tuong','thoai','chieu','than','thien','phai','mon','dam','han','quoc','coca','nhach','xe','vs','mua','kekee','quen','chup','r','dc','jelly','xanh','chocolate','ah','kia','trai','kg','j','tiramisu','ok','cu','con','pho','sam','uat','ha','care','goc','chet','hoan','hao','cao','chap','mi,̀','nh,̃,́,̣','bie','ngo','beer,̉','tuye','ng','duo','c','loa','ch','u','uo','chai','the','vie','cuo','mo','die','ta','sa','xo','na','lop','gap','giang','huong','khoa','luan','dh','dien','tiem','chut','trung','thanh','xung','quanh','ky','giac','tieng','goi','nghe','ua','anh','view','bat','mh','giam','moc','hinh','li','😉','thai','thach','khoai','xoan','tekkboki','xong','tan','y','am','boss','lay','😒','bucccc','socola','ghien','😂','💕','tuoi','hue','hueew','menu','ro','rang','lich','bi','chem','nhe','theo','mam','heo','tom','xay','chen','kem','loc','nguyen','bot','chin','mem','ngan','me','thit','it','hiem','troi','tuan','lu','keo','nhau','buon','ms','staff','😅','thuan','cham','soda','huc','phan','im','yeu','cuc','coi','hoang','bon','set','kieu','kimbap','nan','toan','truyen','thong','phut','xi','sat','xon','trc','khoan','tap','dislike','perfect','food','really','good','especially','sum','quicklyserved','cozy','atmosphere','wan','go','although','quite','expensive','still','much','cheaper','chinese','restaurant','ngai','phia','sofa','flan','dth','qay','qngai','hehe','chon','hen','hò','ecard','foody','chau','bui','trang','song','muot','lui','phep','giup','xac','loi','gioi','thieu','kin','i','oi','nv','lenh','san','nong','ny','deo','no','ngum','hix','xep','lò','nguy','muon','quy','tro','lao','kinh','khung','bom','tai','diec','muong','that','viet','daay','aen','salad','hai','bach','tuoc','muoi','sushi','nui','udon','😢','dao','man','nghin','giai','hieu','nham','duy','dieu','lòng','ga','tiec','chan','nang','coc','chuan','ho','fai','hnay','kho','gu','giu','muo','chuye','hie','tó','see','park','asked','took','attitude','owner','husband','driving','older','dream','treated','us','like','absolute','garbage','based','assumed','economic','standing','stay','away','place','unless','uppity','rac','vong','bang','hap','giò','thua','phuong','sashimi','bento','mui','tre','xin','doc','to','mo','ac','haizzz','khuat','hang','chanh','phong','karaoke','som','hung','times','city','bua','loanh','xem','pr','quyet','knoi','ran','lot','loai','sap','chao','si','duoi','nga','muc','ui','soc','dò','tret','mong','phang','gao','boc','xot','ps','hach','hoe','hoat','kham','dich','tham','em','sy','benh','choc','thang','nhanh','thap','ty','xuyen','ung','rui','lup','sup','baoz','dimsum','sui','dinsum','nep','nanh','bong','khoi','ao','toc','bam','khat','gay','cut','bien','hoac','phim','trinh','bay','ten','😏','tron','decor','xua','vintage','pizza','hancook','xao','bap','thac','nhuom','xa','daz','cot','chanb','cug','😋','oc','beat','nhang','lieu','long','nhinh','giòn','nghiem','pate','my','eo','uot','kien','lom','ngom','thiu','vung','coal','fire','double','cheese','zzaii','bbq','ribs','beef','steak','bia','chuong','khuyen','ton','nat','suy','terminal','e','kip','choet','barbos','ruot','ranh','rips','suon','nuong','combo','tr','uop','hq','deep','blue','violet','takeaway','wifi','free','vot','boi','👍','dn','giat','ne','un','mun','gop','wa','fuc','koi','way','qan','qen','treo','nge','duog','khog','q','teo','vuong','khuc','vòng','cog','giay','hihi','post','gung','tran','gat','comment','ru','search','chiec','kng','tui','truot','sai','suc','xui','rv','bt','zi','soi','sung','bhd','cum','rap','icon','bitexco','galaxy','cgv','bich','tiet','kiem','dot','caramel','hjc','lech','thik','giua','chenh','khan','meo','bik','online','nghet','truc','trac','bye','vip','ak','couple','tit','mung','nc','coa','xau','dolby','nhoa','stress','hien','voucher','cui','lac','phieu','sd','v','bnhiu','wasabi','tp','cheap','nhiu','love','xit','nhua','tho','ngac','kich','tong','vnd','kchiec','kcoc','ot','xeng','phomai','chuoi','highland','bloom','saigon','toa','tphcm','son','km','metro','tieu','ich','thao','gym','massage','tour','…','ap','ngu','hum','tanh','tau','hu','quare','vincom','ham','nhop','ngonn','❤','nuo','bibimbap','mie','luo','thg','fan','ding','tea','hokkaido','chattime','men','🌸','bet','nhen','bingsu','matcha','ayyyyy','nheo','min','hau','vani','mit','topping','toat','ghep','choang','qa','nung','sg','tranh','nghit','miet','mor','cmt','purin','even','cookies','ice','blend','xuat','hui','dòng','luot','mien','xuc','thia','miam','sv','rom','latte','choco','mallow','viem','khai','truong','tat','suong','design','hòa','quat','cafe','cacao','tao','viec','ksuat','hoanh','ngat','must','store','jjj','om','volcano','milo','buonnnnn','hetttt']
fre = [47,97,63,19,81,155,29,7,19,38,1,78,53,6,6,4,6,24,5,29,61,55,38,45,16,30,5,32,18,17,6,9,45,19,63,16,166,13,16,4,42,65,14,1,9,26,135,50,27,35,25,2,38,13,93,35,144,5,86,1,76,20,11,73,23,16,44,33,46,33,37,168,1,3,40,7,5,31,20,67,1,27,60,56,4,9,95,50,1,45,10,15,36,7,24,21,7,63,11,50,14,4,10,57,33,1,4,4,48,19,26,69,31,10,8,6,25,25,68,18,8,22,11,19,24,26,6,5,14,31,122,14,9,8,20,13,10,5,10,9,8,9,1,25,4,5,7,6,2,19,78,2,91,31,18,66,14,1,25,23,96,6,28,6,31,10,19,2,14,8,2,54,8,31,1,1,25,18,16,16,23,12,1,30,1,19,7,19,1,3,7,7,12,11,63,11,5,14,4,49,10,26,17,1,1,5,4,7,4,7,1,35,2,32,47,3,4,17,16,4,1,27,2,2,24,2,1,2,9,4,6,11,4,3,3,2,3,1,7,15,2,5,27,3,66,11,26,9,33,2,2,6,19,1,11,6,9,9,8,7,11,1,8,1,35,7,5,21,10,30,33,3,6,9,3,7,10,21,8,17,3,37,9,2,5,12,3,11,1,1,6,8,4,5,10,5,40,2,8,8,39,4,6,24,12,3,8,17,5,8,8,1,1,1,24,1,4,20,8,5,16,14,35,46,17,13,5,1,1,18,13,21,1,11,9,2,30,2,4,2,3,8,5,1,8,2,7,27,9,3,3,2,11,1,3,2,4,3,9,1,9,44,9,16,47,37,1,10,4,27,1,19,3,8,2,8,6,1,2,22,1,1,13,2,6,1,2,7,3,4,1,3,5,1,1,4,7,6,8,7,3,2,6,6,10,37,13,2,22,5,13,1,5,2,21,3,1,9,2,8,2,2,12,11,19,7,1,8,1,1,2,1,3,2,11,2,1,10,6,6,5,23,1,14,7,5,2,14,3,4,28,3,6,7,2,4,9,4,3,15,2,9,4,3,3,3,1,1,1,1,1,7,4,1,13,1,4,17,10,2,7,2,9,3,2,7,1,3,3,2,2,1,9,1,5,1,1,2,1,2,1,1,1,1,2,4,3,1,1,1,1,1,1,1,2,2,1,1,2,1,1,1,1,3,5,3,2,3,5,5,10,6,2,4,1,1,1,11,3,5,1,6,4,11,1,12,11,1,1,7,1,1,1,1,1,11,2,2,2,9,3,1,6,1,2,14,6,1,1,2,11,6,4,3,8,1,3,2,10,13,1,3,6,2,1,6,6,10,1,6,7,3,2,9,1,2,12,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,7,2,5,2,2,2,3,1,13,4,3,4,1,1,1,2,3,19,8,8,1,2,2,1,1,3,1,11,4,3,1,2,1,9,1,8,2,3,1,6,4,4,1,2,4,1,5,2,2,1,1,1,1,5,5,6,4,1,1,1,1,4,4,1,1,5,2,2,2,1,2,2,1,1,2,1,3,2,1,1,1,1,1,2,4,2,2,3,3,1,6,1,1,1,2,1,2,7,3,1,5,1,1,1,2,3,2,1,1,1,2,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,4,1,2,1,1,1,1,2,2,2,2,1,1,4,1,1,2,2,2,1,3,5,7,1,1,1,3,3,3,1,1,1,1,2,5,2,3,1,1,1,2,1,1,2,1,3,1,1,1,3,1,1,2,1,2,2,1,1,2,1,1,2,1,1,1,1,1,1,4,1,2,2,1,1,1,1,2,1,4,1,9,1,1,2,3,1,1,1,1,3,1,4,1,2,1,1,3,1,1,1,1,1,2,2,1,2,1,1,7,1,1,1,1,1,1,6,1,4,2,1,1,1,1,1,1,2,1,1,1,3,1,1,2,1,1,1,1,1,1,1,1,3,3,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,2,3,1,1,1,4,2,1,8,5,1,2,2,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,3,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
mean = np.array(fre)
me = mean.mean()
dic_ = [0]
fre_ = [0]
for i in range(len(dic)):
  if fre[i] > me:
    fre_.append(fre[i])
    dic_.append(dic[i])
dic_ = dic_[1:]
fre_ = fre_[1:]
print(dic_)
print(fre_)
print(len(dic_))

"""Đây là từ điển dc giữ lại với số từ là 229 
mảng thứ nhất là dictionary
mảng thứ 2 là tần suất xuất hiện của dictionary

['den', 'quan', 'lan', 'thoi', 'rat', 'la', 'thich', 'nam', 'trong', 'nhung', 'de', 'mat', 'se', 'nhan', 'vien', 'phuc', 'vu', 'nhiet', 'tinh', 'thuong', 'thuc', 'don', 'da', 'dang', 'gia', 're', 'an', 'nem', 'hop', 'vi', 'ngon', 'mieng', 'vua', 'khong', 'qua', 'ngay', 'tra', 'sua', 'uong', 'thom', 'va', 'dung', 'minh', 'o', 'noi', 'chung', 'diem', 'cho', 'chat', 'luong', 'lam', 'vao', 'toi', 'chu', 'nhat', 'co', 'kha', 'gian', 'tang', 'hoi', 'ngoi', 'ca', 'ra', 'do', 'ko', 'lau', 'mac', 'du', 'khach', 'doi', 'gan', 'moi', 'mang', 'duoc', 'ly', 'ong', 'nay', 'chi', 'voi', 'chac', 'quay', 'lai', 'nua', 'be', 'dong', 'nguoi', 'nen', 'chua', 'binh', 'dac', 'biet', 'khi', 'gi', 'dat', 'banh', 'thi', 'su', 'tu', 'van', 'chuyen', 'tuyet', 'sau', 'cac', 'ban', 'day', 'thu', 'n', 'ma', 'gio', 'luc', 'nao', 'cung', 'vo', 'luon', 'chien', 'them', 'dia', 'k', 'nha', 'roi', 'duong', 'ben', 'com', 'tam', 'lun', 'ghe', 'dep', 'hay', 'sang', 'hom', 'di', 'a', 'xiu', 'nhu', 'vay', 'dinh', 'tren', 'cua', 'nhieu', 've', 'mai', 'cha', 'bao', 'len', 'tri', 'dan', 'het', 'thay', 'chang', 'khac', 'hon', 'nho', 'ai', 'to', 'dau', 'nhin', 'cach', 'mot', 'cai', 'sot', 'cam', 'ngoai', 'may', 'so', 'le', 'vai', 'còn', 'nuoc', 'bo', 'te', 'sao', 'tien', 'tuong', 'than', 'thien', 'phai', 'mon', 'dam', 'han', 'xe', 'vs', 'mua', 'quen', 'dc', 'cu', 'ha', 'nh,̃,́,̣', 'ngo', 'beer,̉', 'tuye', 'duo', 'loa', 'u', 'ta', 'na', 'view', 'bat', 'mh', 'moc', 'li', 'khoai', 'lay', '😒', 'bucccc', 'rang', 'chem', 'heo', 'xay', 'nguyen', 'mem', 'keo', 'hoang', 'kieu', 'kimbap', 'giup', 'oi', 'deo', 'ngum', 'hix', 'khung', 'hai', 'nui', 'nham', 'duy', 'chuan', 'hie', 'mo', 'hung', 'lot']
[47, 97, 63, 19, 81, 155, 29, 19, 38, 78, 53, 24, 29, 61, 55, 38, 45, 16, 30, 32, 18, 17, 45, 19, 63, 16, 166, 13, 16, 42, 65, 14, 26, 135, 50, 27, 35, 25, 38, 13, 93, 35, 144, 86, 76, 20, 11, 73, 23, 16, 44, 33, 46, 33, 37, 168, 40, 31, 20, 67, 27, 60, 56, 95, 50, 45, 10, 15, 36, 24, 21, 63, 11, 50, 14, 10, 57, 33, 48, 19, 26, 69, 31, 10, 25, 25, 68, 18, 22, 11, 19, 24, 26, 14, 31, 122, 14, 20, 13, 10, 10, 25, 19, 78, 91, 31, 18, 66, 14, 25, 23, 96, 28, 31, 10, 19, 14, 54, 31, 25, 18, 16, 16, 23, 12, 30, 19, 19, 12, 11, 63, 11, 14, 49, 10, 26, 17, 35, 32, 47, 17, 16, 27, 24, 11, 15, 27, 66, 11, 26, 33, 19, 11, 11, 35, 21, 10, 30, 33, 10, 21, 17, 37, 12, 11, 10, 40, 39, 24, 12, 17, 24, 20, 16, 14, 35, 46, 17, 13, 18, 13, 21, 11, 30, 27, 11, 44, 16, 47, 37, 10, 27, 19, 22, 13, 10, 37, 13, 22, 13, 21, 12, 11, 19, 11, 10, 23, 14, 14, 28, 15, 13, 17, 10, 10, 11, 11, 12, 11, 11, 14, 11, 10, 13, 10, 12, 13, 19, 11]

* Bước tiếp theo tôi thực hiên vectorian tất cả các đoạn văn bảng dựa trên dictinary và tôi lưu vào file vectorian.txt
* Ở file vetorian.txt này có 3 cột mỗi cột cách nhau và 1 dấu tab(\t)
- cột thứ nhất là số biểu thị điểm dữ liệu thứ mấy
- cột thứ hai là số biểu thị index của word đó trong dictionary
- Cột thứ 3 là tần suất xuất hiện word đó ở điểm data của chúng ta
Mục đích của việc lưu file dạng này là để tiết kiệm bộ nhớ.
Vì vector data của chúng ta chứa rất nhiều điểm bằng 0.
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import nltk
from string import punctuation
from nltk.corpus import stopwords
from nltk.stem import SnowballStemmer
from nltk.tokenize import sent_tokenize, word_tokenize
import re
import time

t = time.time()
nltk.download('stopwords')
nltk.download('punkt')
def to_lower(text):
    return ' '.join([w.lower() for w in word_tokenize(text)])

def remove_(text):
  cleaned_text = re.sub('<[^<]+?>','', text)
  return cleaned_text
def remove_number(text):
  output = ''.join(c for c in text if not c.isdigit())
  return output
def remove_punctuation( text):
  return ''.join(c for c in text if c not in punctuation)
def remove_stop_word(text):
  stop_words = set(stopwords.words('english'))
  tokens = word_tokenize(text)
  result = [i for i in tokens if not i in stop_words]
  return result
def preprocess(text, f):
  dic, fre = filter_dic()
  i = 0
  while i < 100:
    text[i] = str(text[i])
    text[i] = to_lower(text[i])
    text[i] = remove_(text[i])
    text[i] = remove_number(text[i])
    text[i] = remove_punctuation( text[i])
    text[i] = remove_stop_word(text[i])
    #tokenizer = keras.preprocessing.text.Tokenizer(filters='!"#$%&()*+,-./:;<=>?@[\]^`{|}💕~😂')
    #tokenizer.fit_on_texts(text[i])
    #text[i] = tokenizer.word_index
    #d = text[i]
    #length = len(d)
    #text[i] = np.array(d)
    #text[i] = np.array(list(d.keys()))
    j = 0
    while j < len(text[i]):
      t = text[i]
      t[j] = convert(t[j])
      if t[j] in dic:
        f.write(str(i)+'\t'+str(dic.index(t[j]))+'\t'+str(t.count(t[j]))+ '\n')
      j +=1
    i +=1
  return text
def convert(text):
  output = text
  for regex, replace in patterns.items():
    output = re.sub(regex, replace, output)
    output = re.sub(regex.upper(), replace.upper(), output)
  return output
def filter_dic():
  dic = ['den','quan','lan','thoi','rat','la','thich','tuy','nam','trong','hem','nhung','de','tim','rong','rai','thoang','mat','sach','se','nhan','vien','phuc','vu','nhiet','tinh','sieu','thuong','thuc','don','phong','phu','da','dang','gia','re','an','nem','hop','khau','vi','ngon','mieng','desert','ngot','vua','khong','qua','ngay','tra','sua','uyen','uong','thom','va','dung','minh','tung','o','hongkong','noi','chung','diem','cho','chat','luong','lam','vao','toi','chu','nhat','co','band','hat','kha','on','nhien','gian','tang','hoi','hep','ngoi','ca','ra','via','he','do','ko','lamz','lau','mac','du','khach','vang','doi','gan','p','moi','mang','duoc','ly','phe','ong','nay','chi','kheo','quang','ba','voi','chac','quay','lai','nua','be','ti','choi','dong','nguoi','nen','chua','tot','binh','dac','biet','khi','gi','sac','order','dat','banh','thi','su','tiep','dai','tu','van','chuyen','gui','tuyet','beo','rau','cau','pham','sau','dip','sinh','mau','lon','chuc','cac','ban','phat','day','thu','n','ma','gio','review','luc','nao','cung','chay','vo','nghiep','luon','chien','them','vat','dia','dua','chia','k','truoc','nha','chinh','riet','roi','duong','ben','com','tam','lun','trien','ghe','gom','dep','nhac','hay','art','buoc','lien','buoi','sang','hom','di','a','bac','xiu','yen','nhu','vay','dinh','tren','cuon','note','bu','thiet','danh','ghi','ki','niem','cua','rieng','nhieu','ve','hi','khen','mai','cha','che','gemini','bao','òy','dj','len','noc','luonnn','cap','tuc','h','xuong','tri','bai','cat','khu','xoa','bar','cocktails','pha','dan','bung','lua','het','pub','thay','chang','khac','chiu','hon','tru','dim','thui','nho','trog','ai','nu','deu','cay','hoa','hong','to','mog','cuoi','hoai','dau','nhom','canh','nhin','cach','mot','cai','ke','giong','nghi','tha','neu','sot','cam','vui','ngoai','cf','may','lanh','hut','thuoc','so','phi','le','bau','olong','trua','bò','bun','que','vai','cong','còn','suot','keu','dem','nuoc','leo','nau','bo','te','lat','can','sao','ay','lo','tay','rot','nap','sate','tien','tc','buc','tuong','thoai','chieu','than','thien','phai','mon','dam','han','quoc','coca','nhach','xe','vs','mua','kekee','quen','chup','r','dc','jelly','xanh','chocolate','ah','kia','trai','kg','j','tiramisu','ok','cu','con','pho','sam','uat','ha','care','goc','chet','hoan','hao','cao','chap','mi,̀','nh,̃,́,̣','bie','ngo','beer,̉','tuye','ng','duo','c','loa','ch','u','uo','chai','the','vie','cuo','mo','die','ta','sa','xo','na','lop','gap','giang','huong','khoa','luan','dh','dien','tiem','chut','trung','thanh','xung','quanh','ky','giac','tieng','goi','nghe','ua','anh','view','bat','mh','giam','moc','hinh','li','😉','thai','thach','khoai','xoan','tekkboki','xong','tan','y','am','boss','lay','😒','bucccc','socola','ghien','😂','💕','tuoi','hue','hueew','menu','ro','rang','lich','bi','chem','nhe','theo','mam','heo','tom','xay','chen','kem','loc','nguyen','bot','chin','mem','ngan','me','thit','it','hiem','troi','tuan','lu','keo','nhau','buon','ms','staff','😅','thuan','cham','soda','huc','phan','im','yeu','cuc','coi','hoang','bon','set','kieu','kimbap','nan','toan','truyen','thong','phut','xi','sat','xon','trc','khoan','tap','dislike','perfect','food','really','good','especially','sum','quicklyserved','cozy','atmosphere','wan','go','although','quite','expensive','still','much','cheaper','chinese','restaurant','ngai','phia','sofa','flan','dth','qay','qngai','hehe','chon','hen','hò','ecard','foody','chau','bui','trang','song','muot','lui','phep','giup','xac','loi','gioi','thieu','kin','i','oi','nv','lenh','san','nong','ny','deo','no','ngum','hix','xep','lò','nguy','muon','quy','tro','lao','kinh','khung','bom','tai','diec','muong','that','viet','daay','aen','salad','hai','bach','tuoc','muoi','sushi','nui','udon','😢','dao','man','nghin','giai','hieu','nham','duy','dieu','lòng','ga','tiec','chan','nang','coc','chuan','ho','fai','hnay','kho','gu','giu','muo','chuye','hie','tó','see','park','asked','took','attitude','owner','husband','driving','older','dream','treated','us','like','absolute','garbage','based','assumed','economic','standing','stay','away','place','unless','uppity','rac','vong','bang','hap','giò','thua','phuong','sashimi','bento','mui','tre','xin','doc','to','mo','ac','haizzz','khuat','hang','chanh','phong','karaoke','som','hung','times','city','bua','loanh','xem','pr','quyet','knoi','ran','lot','loai','sap','chao','si','duoi','nga','muc','ui','soc','dò','tret','mong','phang','gao','boc','xot','ps','hach','hoe','hoat','kham','dich','tham','em','sy','benh','choc','thang','nhanh','thap','ty','xuyen','ung','rui','lup','sup','baoz','dimsum','sui','dinsum','nep','nanh','bong','khoi','ao','toc','bam','khat','gay','cut','bien','hoac','phim','trinh','bay','ten','😏','tron','decor','xua','vintage','pizza','hancook','xao','bap','thac','nhuom','xa','daz','cot','chanb','cug','😋','oc','beat','nhang','lieu','long','nhinh','giòn','nghiem','pate','my','eo','uot','kien','lom','ngom','thiu','vung','coal','fire','double','cheese','zzaii','bbq','ribs','beef','steak','bia','chuong','khuyen','ton','nat','suy','terminal','e','kip','choet','barbos','ruot','ranh','rips','suon','nuong','combo','tr','uop','hq','deep','blue','violet','takeaway','wifi','free','vot','boi','👍','dn','giat','ne','un','mun','gop','wa','fuc','koi','way','qan','qen','treo','nge','duog','khog','q','teo','vuong','khuc','vòng','cog','giay','hihi','post','gung','tran','gat','comment','ru','search','chiec','kng','tui','truot','sai','suc','xui','rv','bt','zi','soi','sung','bhd','cum','rap','icon','bitexco','galaxy','cgv','bich','tiet','kiem','dot','caramel','hjc','lech','thik','giua','chenh','khan','meo','bik','online','nghet','truc','trac','bye','vip','ak','couple','tit','mung','nc','coa','xau','dolby','nhoa','stress','hien','voucher','cui','lac','phieu','sd','v','bnhiu','wasabi','tp','cheap','nhiu','love','xit','nhua','tho','ngac','kich','tong','vnd','kchiec','kcoc','ot','xeng','phomai','chuoi','highland','bloom','saigon','toa','tphcm','son','km','metro','tieu','ich','thao','gym','massage','tour','…','ap','ngu','hum','tanh','tau','hu','quare','vincom','ham','nhop','ngonn','❤','nuo','bibimbap','mie','luo','thg','fan','ding','tea','hokkaido','chattime','men','🌸','bet','nhen','bingsu','matcha','ayyyyy','nheo','min','hau','vani','mit','topping','toat','ghep','choang','qa','nung','sg','tranh','nghit','miet','mor','cmt','purin','even','cookies','ice','blend','xuat','hui','dòng','luot','mien','xuc','thia','miam','sv','rom','latte','choco','mallow','viem','khai','truong','tat','suong','design','hòa','quat','cafe','cacao','tao','viec','ksuat','hoanh','ngat','must','store','jjj','om','volcano','milo','buonnnnn','hetttt']
  fre = [47,97,63,19,81,155,29,7,19,38,1,78,53,6,6,4,6,24,5,29,61,55,38,45,16,30,5,32,18,17,6,9,45,19,63,16,166,13,16,4,42,65,14,1,9,26,135,50,27,35,25,2,38,13,93,35,144,5,86,1,76,20,11,73,23,16,44,33,46,33,37,168,1,3,40,7,5,31,20,67,1,27,60,56,4,9,95,50,1,45,10,15,36,7,24,21,7,63,11,50,14,4,10,57,33,1,4,4,48,19,26,69,31,10,8,6,25,25,68,18,8,22,11,19,24,26,6,5,14,31,122,14,9,8,20,13,10,5,10,9,8,9,1,25,4,5,7,6,2,19,78,2,91,31,18,66,14,1,25,23,96,6,28,6,31,10,19,2,14,8,2,54,8,31,1,1,25,18,16,16,23,12,1,30,1,19,7,19,1,3,7,7,12,11,63,11,5,14,4,49,10,26,17,1,1,5,4,7,4,7,1,35,2,32,47,3,4,17,16,4,1,27,2,2,24,2,1,2,9,4,6,11,4,3,3,2,3,1,7,15,2,5,27,3,66,11,26,9,33,2,2,6,19,1,11,6,9,9,8,7,11,1,8,1,35,7,5,21,10,30,33,3,6,9,3,7,10,21,8,17,3,37,9,2,5,12,3,11,1,1,6,8,4,5,10,5,40,2,8,8,39,4,6,24,12,3,8,17,5,8,8,1,1,1,24,1,4,20,8,5,16,14,35,46,17,13,5,1,1,18,13,21,1,11,9,2,30,2,4,2,3,8,5,1,8,2,7,27,9,3,3,2,11,1,3,2,4,3,9,1,9,44,9,16,47,37,1,10,4,27,1,19,3,8,2,8,6,1,2,22,1,1,13,2,6,1,2,7,3,4,1,3,5,1,1,4,7,6,8,7,3,2,6,6,10,37,13,2,22,5,13,1,5,2,21,3,1,9,2,8,2,2,12,11,19,7,1,8,1,1,2,1,3,2,11,2,1,10,6,6,5,23,1,14,7,5,2,14,3,4,28,3,6,7,2,4,9,4,3,15,2,9,4,3,3,3,1,1,1,1,1,7,4,1,13,1,4,17,10,2,7,2,9,3,2,7,1,3,3,2,2,1,9,1,5,1,1,2,1,2,1,1,1,1,2,4,3,1,1,1,1,1,1,1,2,2,1,1,2,1,1,1,1,3,5,3,2,3,5,5,10,6,2,4,1,1,1,11,3,5,1,6,4,11,1,12,11,1,1,7,1,1,1,1,1,11,2,2,2,9,3,1,6,1,2,14,6,1,1,2,11,6,4,3,8,1,3,2,10,13,1,3,6,2,1,6,6,10,1,6,7,3,2,9,1,2,12,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,7,2,5,2,2,2,3,1,13,4,3,4,1,1,1,2,3,19,8,8,1,2,2,1,1,3,1,11,4,3,1,2,1,9,1,8,2,3,1,6,4,4,1,2,4,1,5,2,2,1,1,1,1,5,5,6,4,1,1,1,1,4,4,1,1,5,2,2,2,1,2,2,1,1,2,1,3,2,1,1,1,1,1,2,4,2,2,3,3,1,6,1,1,1,2,1,2,7,3,1,5,1,1,1,2,3,2,1,1,1,2,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,4,1,2,1,1,1,1,2,2,2,2,1,1,4,1,1,2,2,2,1,3,5,7,1,1,1,3,3,3,1,1,1,1,2,5,2,3,1,1,1,2,1,1,2,1,3,1,1,1,3,1,1,2,1,2,2,1,1,2,1,1,2,1,1,1,1,1,1,4,1,2,2,1,1,1,1,2,1,4,1,9,1,1,2,3,1,1,1,1,3,1,4,1,2,1,1,3,1,1,1,1,1,2,2,1,2,1,1,7,1,1,1,1,1,1,6,1,4,2,1,1,1,1,1,1,2,1,1,1,3,1,1,2,1,1,1,1,1,1,1,1,3,3,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,2,3,1,1,1,4,2,1,8,5,1,2,2,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,3,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
  mean = np.array(fre)
  me = mean.mean()
  dic_ = [0]
  fre_ = [0]
  for i in range(len(dic)):
    if fre[i] > me:
      fre_.append(fre[i])
      dic_.append(dic[i])
  return dic_[1:], fre_[1:]
if __name__== '__main__':
  f = open('/content/vectorian.txt','w')
  patterns = {
    '[áàạãảăắ ằẳ ẵ ặâấ ầ ẩ ẫ ậ]': 'a',
    '[đ]': 'd',
    '[ìíỉĩị]': 'i',
    '[òóỏõọôồ ố ổ ỗ ộơờớởỡợ]': 'o',
    '[éèẽẻẹêế ề ể ệễ ]': 'e', 
    '[ùúủũụưừứử ữự]': 'u',
    '[ỳýỷỹỵ]': 'y'
  }
  train_X = pd.read_csv('/content/train.csv')
  text = train_X['text']
  text = preprocess(text, f)
  f.close()

"""* Ở bước này ta đã có hoàn toàn file data vectorian.txt chứa dữ liệu chuẩn để có thể train model

Thuật Toán :
- Khi nghĩ tới phân loại văn bản với 2 class thì ta nghĩ ngay đến Naive Bayes rất thành công với phân loại mail spam. Từ đó hướng đi đầu tiên trong model này là sữ dụng Naive Bayes đề classify. Nhưng có vẽ có sự khác biệt về data và cách tiền xữ lí nên tôi nghĩ việc sữ dụng naive Bayes thì accuracy không cao.
- 1 hướng khác có thể nghĩ đến là kernel SVM. Dễ  dàng nhận thấy SVM kerner( soft margin) cho phép dữ liệu chúng ta có thể phân lớp sai nhưng bị phạt rất nặng ở hàm loss. Theo hướng khác qua hàm kernel data sẽ trở nên gần linearly separate. Đây cũng là 1 hướng để thử nghiệm model.
- Deep learning thì sao ? Tôi cho rằng với loại data này thì không thể dùng nerual network. Thứ nhất về việc vectorian với số chiều rất cao. Nếu mã hóa các từ thành số với tần suất như thế thì chúng ta dùng deep đã bỏ qua 1 phần dự doán từ chính người lập model. Nếu dùng deep sẽ không fix được tri thức mà chính ta biết về dữ liệu. Ý của tôi ở đây là ta có thể  sử dụng MAP để có thể  thêm xác suất phân phối của biến ngẫu nhiên labels. Từ đó model sẽ tránh overfit. Tóm lại deep learning hầu như tự học hết tất cả các tham số  mà có thể học đọc( trừ hyperparameter) nên việc chúng ta kết hợp với dự doán và xữ lí preprocess data như ta đã làm thì không phù hợp với deep nerual network.
  => Từ nhận định như thế tôi đề xuất:
Bước 1: dùng Naive Bayes classifier với cả 2 loại phân phối Multinomial naive Bayes và Bernoulli Naive Bayes
Bước 2: Dùng kernel SVM với 2 loại kernel là rbf, poly và sigmoid.

* Thực hiện train model với thuật toán Naive Bayes Classifier với training set 0 -> 69 sau đó kiểm tra bằng validation test 70 -> 100 
* ở đây ta đọc data từ file vectorian lên rồi lưu vào ma trân (100, 229). Trong đó 100 là số điểm dữ liệu. 229 là số từ trong dictionary.
"""

from __future__ import print_function
import numpy as np
from scipy.sparse import coo_matrix
from sklearn.naive_bayes import MultinomialNB, BernoulliNB
from sklearn.metrics import accuracy_score
from sklearn.model_selection import GridSearchCV
import pandas as pd
nwords = 229
def read_data():
  data = np.zeros((100, 229))
  with open('/content/vectorian.txt') as f:
    content = f.readlines()
  content = [x.strip() for x in content]
  dat = np.zeros((len(content), 3), dtype = int)
  for i, line in enumerate(content):
    a = line.split('\t')
    dat[i, :] = np.array([int(a[0]), int(a[1]), int(a[2])])
    t = dat[i, :]
    data[t[0], t[1]] = t[2]
  return data
data = read_data()
data_train = data[:70]
data_validation = data[70:100]
train_X = pd.read_csv('/content/train.csv')
labels = train_X['class']
params = {'alpha': [0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3]}
clf = MultinomialNB()
clf = GridSearchCV(clf, params, cv = 3)
clf.fit(data_train, labels[:70])
best_clf = clf.best_estimator_
y_pred = best_clf.predict(data[:70])
y_pred_validation = best_clf.predict(data[70:100])
print("traing size: " ,len(labels[:70])," accuracy_train_set: ",accuracy_score(labels[:70], y_pred)*100,'%')
print(" accuracy_validation_set: ",accuracy_score(labels[70:100], y_pred_validation)*100,'%')
print(best_clf)
print(y_pred)
print(np.array(labels[:70]))
print(y_pred_validation)
print(np.array(labels[70:100]))

"""* Ta thấy với naive Bayes thì training size = 70 thì độ chính xác của training set là 92.85714285714286 % và trên validation set là 83.33333333333334 %
Tôi đã cố gắng thử với rất nhiều siêu tham số và cuối cùng là tôi được bộ tham số với độ chính xác nhất là MultinomialNB(alpha=1.3, class_prior=None, fit_prior=True)

Ta thấy còn 1 hướng train model khác là kernel SVM.
"""

from __future__ import print_function
import numpy as np
from scipy.sparse import coo_matrix
from sklearn.naive_bayes import MultinomialNB, BernoulliNB
from sklearn.metrics import accuracy_score
from sklearn.model_selection import GridSearchCV
from sklearn import svm
import pandas as pd
nwords = 229
def read_data():
  data = np.zeros((100, 299))
  with open('/content/vectorian.txt') as f:
    content = f.readlines()
  content = [x.strip() for x in content]
  dat = np.zeros((len(content), 3), dtype = int)
  for i, line in enumerate(content):
    a = line.split('\t')
    dat[i, :] = np.array([int(a[0]), int(a[1]), int(a[2])])
    t = dat[i, :]
    data[t[0], t[1]] = t[2]
  return data
data = read_data()
data_train = data[:70]
data_validation = data[70:100]
train_X = pd.read_csv('/content/train.csv')
labels = train_X['class']
params = {'C': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2],
          'kernel': ['rbf','poly', 'sigmoid'],
          'gamma': np.linspace(0.001, 1, 5)
         }
clf = svm.SVC()
clf = GridSearchCV(clf, params, cv = 5)
clf.fit(data[0:70], labels[:70])
best_clf = clf.best_estimator_
y_pred = best_clf.predict(data[0:70])
y_pred_validation = best_clf.predict(data[70:100])
print("traing size: " ,len(labels[:70])," accuracy_train_set: ",accuracy_score(labels[:70], y_pred)*100,'%')
print(" accuracy_validation_set: ",accuracy_score(labels[70:100], y_pred_validation)*100,'%')
print(best_clf)
print(y_pred)
print(np.array(labels[:70]))
print(y_pred_validation)
print(np.array(labels[70:100]))

"""* Qua việc làm thử  với 100 điểm data điều mà tôi quan ngại nhất là model của chúng ta sẽ hội tụ tại giá trị bao nhiêu điểm data đưa vào đào tạo???
* Liệu đào tạo max_size tập train có hiệu quả nhất???
* Qua việc phân tích như trên ta cần thấy trong 27000 dữ liệu file train.cvs ta cần tìm số  lượng dữ liệu train set và validation set phù hợp để accuracy hội tụ.
Vì thế nhiệm vụ cấp thiết ta cần vẽ Learning curve

ở đây tôi chọn bước nhảy của traing set là 2500 data với giá trị bắt đầu là 5000 data
Và validation test bắt đầu bằng 5000 data và bước nhảy 1000 data.

**Ta thực hiện lại toàn bộ dữ liệu**
Mục tiêu chính tìm ra điểm mà số lượng tập validation test và training test hội tụ. Từ đó plot ra đường cong Learning Curve
"""

dic = ['lan','thoi','rat','la','thich','tuy','nam','trong','hem','nhung','de','tim','rong','rai','thoang','mat','sach','se','nhan','vien','phuc','vu','nhiet','tinh','sieu','thuong','thuc','don','phong','phu','da','dang','gia','re','an','nem','hop','khau','vi','ngon','mieng','desert','ngot','vua','khong','qua','ngay','tra','sua','uyen','uong','thom','va','dung','minh','tung','o','hongkong','noi','chung','diem','cho','chat','luong','lam','vao','toi','chu','nhat','co','band','hat','kha','on','nhien','gian','tang','hoi','hep','ngoi','ca','ra','via','he','do','ko','lamz','lau','mac','du','khach','vang','doi','gan','p','moi','mang','duoc','ly','phe','ong','nay','chi','kheo','quang','ba','voi','chac','quay','lai','nua','be','ti','choi','dong','nguoi','nen','chua','tot','binh','dac','biet','khi','gi','sac','order','dat','banh','thi','su','tiep','dai','tu','van','chuyen','gui','tuyet','beo','rau','cau','pham','sau','dip','sinh','mau','lon','chuc','cac','ban','phat','day','thu','n','ma','gio','review','luc','nao','cung','chay','vo','nghiep','luon','chien','them','vat','dia','dua','chia','k','truoc','nha','chinh','riet','roi','duong','ben','com','tam','lun','trien','ghe','gom','dep','nhac','hay','art','buoc','lien','buoi','sang','hom','di','a','bac','xiu','yen','nhu','vay','dinh','tren','cuon','note','bu','thiet','danh','ghi','ki','niem','cua','rieng','nhieu','ve','hi','khen','mai','cha','che','gemini','bao','oy','dj','len','noc','luonnn','cap','tuc','h','xuong','tri','bai','cat','khu','xoa','bar','cocktails','pha','dan','bung','lua','het','pub','thay','chang','khac','chiu','hon','tru','dim','thui','nho','trog','ai','nu','deu','cay','hoa','hong','to','mog','cuoi','hoai','dau','nhom','canh','nhin','cach','mot','cai','ke','giong','nghi','tha','neu','sot','cam','vui','ngoai','cf','may','lanh','hut','thuoc','so','phi','le','bau','olong','trua','bo','bun','que','vai','cong','con','suot','keu','dem','nuoc','leo','nau','te','lat','can','sao','ay','lo','tay','rot','nap','sate','tien','tc','buc','tuong','thoai','chieu','than','thien','phai','mon','dam','han','quoc','coca','nhach','xe','vs','mua','kekee','quen','chup','r','dc','jelly','xanh','chocolate','ah','kia','trai','kg','j','tiramisu','ok','cu','pho','sam','uat','ha','care','goc','chet','hoan','hao','cao','chap','mi','̀','nh','̃','́','̣','bie','ngo','beer','̉','tuye','ng','duo','c','loa','ch','u','uo','chai','the','vie','cuo','mo','die','ta','sa','xo','na','lop','gap','giang','huong','khoa','luan','dh','dien','tiem','chut','trung','thanh','xung','quanh','ky','giac','tieng','goi','nghe','ua','anh','view','bat','mh','giam','moc','hinh','li','😉','thai','thach','khoai','xoan','tekkboki','xong','tan','y','am','boss','lay','😒','bucccc','socola','ghien','😂','💕','tuoi','hue','hueew','menu','ro','rang','lich','bi','chem','nhe','theo','mam','heo','tom','xay','chen','kem','loc','nguyen','bot','chin','mem','ngan','me','thit','it','hiem','troi','tuan','lu','keo','nhau','buon','ms','staff','😅','thuan','cham','soda','huc','phan','im','yeu','cuc','coi','hoang','bon','set','kieu','kimbap','nan','toan','truyen','thong','phut','xi','sat','xon','trc','khoan','tap','dislike','perfect','food','really','good','especially','sum','quicklyserved','cozy','atmosphere','wan','go','although','quite','expensive','still','much','cheaper','chinese','restaurant','ngai','phia','sofa','flan','dth','qay','qngai','hehe','chon','hen','ho','ecard','foody','chau','bui','trang','song','muot','lui','phep','giup','xac','loi','gioi','thieu','kin','i','oi','nv','lenh','san','nong','ny','deo','no','ngum','hix','xep','nguy','muon','quy','tro','lao','kinh','khung','bom','tai','diec','muong','that','viet','daay','aen','salad','hai','bach','tuoc','muoi','sushi','nui','udon','😢','dao','man','nghin','giai','hieu','nham','duy','dieu','long','ga','tiec','chan','nang','coc','chuan','fai','hnay','kho','gu','giu','muo','chuye','hie','tó','see','park','asked','took','attitude','owner','husband','driving','older','dream','treated','us','like','absolute','garbage','based','assumed','economic','standing','stay','away','place','unless','uppity','rac','vong','bang','hap','thua','phuong','sashimi','bento','mui','tre','xin','doc','ac','haizzz','khuat','hang','chanh','karaoke','som','hung','times','city','bua','loanh','xem','pr','quyet','knoi','ran','lot','loai','sap','chao','si','duoi','nga','muc','ui','soc','tret','mong','phang','gao','boc','xot','ps','hach','hoe','hoat','kham','dich','tham','em','sy','benh','choc','thang','nhanh','thap','ty','xuyen','ung','rui','lup','sup','baoz','dimsum','sui','dinsum','nep','nanh','bong','khoi','ao','toc','bam','khat','gay','cut','bien','hoac','phim','trinh','bay','ten','😏','tron','decor','xua','vintage','pizza','hancook','xao','bap','thac','nhuom','xa','daz','cot','chanb','cug','😋','oc','beat','nhang','lieu','nhinh','gion','nghiem','pate','my','eo','uot','kien','lom','ngom','thiu','vung','coal','fire','double','cheese','zzaii','bbq','ribs','beef','steak','bia','chuong','khuyen','ton','nat','suy','terminal','e','kip','choet','barbos','ruot','ranh','rips','suon','nuong','combo','tr','uop','hq','deep','blue','violet','takeaway','wifi','free','vot','boi','👍','dn','giat','ne','un','mun','gop','wa','fuc','koi','way','qan','qen','treo','nge','duog','khog','q','teo','vuong','khuc','cog','giay','hihi','post','gung','tran','gat','comment','ru','search','chiec','kng','tui','truot','sai','suc','xui','rv','bt','zi','soi','sung','bhd','cum','rap','icon','bitexco','galaxy','cgv','bich','tiet','kiem','dot','caramel','hjc','lech','thik','giua','chenh','khan','meo','bik','online','nghet','truc','trac','bye','vip','ak','couple','tit','mung','nc','coa','xau','dolby','nhoa','stress','hien','voucher','cui','lac','phieu','sd','v','bnhiu','wasabi','tp','cheap','nhiu','love','xit','nhua','tho','ngac','kich','tong','vnd','kchiec','kcoc','ot','xeng','phomai','chuoi','highland','bloom','saigon','toa','tphcm','son','km','metro','tieu','ich','thao','gym','massage','tour','…','ap','ngu','hum','tanh','tau','hu','quare','vincom','ham','nhop','ngonn','❤','nuo','bibimbap','mie','luo','thg','fan','ding','tea','hokkaido','chattime','men','🌸','bet','nhen','bingsu','matcha','ayyyyy','nheo','min','hau','vani','mit','topping','toat','ghep','choang','qa','nung','sg','tranh','nghit','miet','mor','cmt','purin','even','cookies','ice','blend','xuat','hui','luot','mien','xuc','thia','miam','sv','rom','latte','choco','mallow','viem','khai','truong','tat','suong','design','quat','cafe','cacao','tao','viec','ksuat','hoanh','ngat','must','store','jjj','om','volcano','milo','buonnnnn','hetttt','best','seller','khe','gium','z','hiu','giao','ruoi','ri','quyen','uu','tivi','nhuoc','xu','nhep','ket','vac','vuot','thoa','map','rua','chong','lang','met','ad','update','khop','gg','mn','yaourt','tous','les','jours','tin','rach','nhay','rut','gai','kiu','bep','uc','dt','dum','queo','liec','nut','tich','gang','nhg','ngap','hanh','shop','taxi','xich','d','khoang','conkg','nhah','tokbokki','tok','kim','cg','zo','au','vuc','vap','bthg','lung','linh','siro','khet','ngang','yumchar','singapore','ep','ngoan','tuo','loe','loet','hoc','seminar','gon','non','trom','suo','nhie','net','xoai','top','nhai','flim','film','suu','smilemee','knguoi','️','sut','tram','teen','frappu','smoothie','milkshake','doan','kieng','von','luom','khinh','chuot','nghieng','doanh','ksec','kto','xien','😜','ngeu','rib','eye','ngua','coco','nhon','nhip','ram','sdt','ruong','phjm','nhug','lotte','bjk','giot','khj','chuoc','phap','live','panna','cotta','lipton','haizz','ramen','vhuowng','feedback','vietnam','kimchi','bill','ngam','daauf','billiards','restroom','•','☺','ship','guong','uh','bobapop','cang','hot','bieu','rieu','hn','tapi','monhf','zay','web','dijon','red','sunset','x','mm','khia','hy','mach','duc','chui','tuyen','nhao','hin','xach','okonomiyaki','teriyaki','yakisoba','mu','amnx','cuar','suat','piza','buffee','phon','ret','magias','nhich','luoi','casc','got','duyet','kh','ngheu','tako','nhuyen','fb','rinh','mexico','enchilada','burrito','taco','khiep','boga','swing','zai','lounge','vut','cocktail','phet','pinacolada','ruou','rum','ngao','nhap','xd','shisha','liu','diu','ech','kfc','thau','nuc','luu','yumba','oder','ngheo','kafe','nghien','ec','nom','thinh','noel','chum','tablenow','comments','khuon','chile','vn','cuong','roti','chug','nag','xog','dog','phug','thah','😆','nak','😍','sashima','😁','dessert','blueberry','vanila','butter','style','truo','giaer','acoustic','ghet','kgian','luonnnn','💜','duon','huhu','yeuuuuuu','dap','bn','training','lvs','gogi','xinh','tray','ken','siet','deph','cup','laptop','quet','trach','nhiem','yogurt','phun','vpop','hm','nuom','nuop','sen','ren','freeeeeeee','bop','gram','manh','nguon','vanilla','popeyes','burger','king','vt','loan','khoe','kly','surprise','hmmnmnn','ñ','um','teu','ge','vivo','sumo','thjk','nuosc','nvien','ktra','hac','bjo','thiesu','cae','nhi','nieu','preview','kbh','mini','hua','say','loft','ngoc','ngach','take','😖','ron','gong','cty','milkfoam','sich','size','phien','dak','galbi','piano','okie','coffee','tum','high','suggestion','waffle','mk','tac','lady','merci','res','xet','hiiii','lach','http','wwwfoodyvnhochiminhquananmercireschaoechsingaporevuhuytanbinhluan','tuyetvoi','hhiii','mayonase','fd','mieg','ds','cute','💓','vc','dui','kute','huyet','pasteur','khang','huu','foodie','bunbohue','monhue','dinhtienhoang','huy','ngui','recommend','ngoa','nguo','hell','kitchen','tie','neo','sapoche','bit','chip','dzua','roc','gummy','thiec','trg','ria','hehee','dut','mozzarela','oke','dze','cajun','pamela','welcomeeee','nhut','dzien','thgian','luoc','ngeo','kphan','roai','xeo','cx','thuo','ktd','vl','chesse','zl','ocean','ii','nchung','trud','cgi','à','wc','lamm','soup','tn','dz','b','qlai','thuat','khien','l','juice','box','kk','passion','extra','vet','nuot','choanh','quai','buffer','cah','sky','hixhix','starbucks','📌','mng','macchiato','tazo','press','club','green','chocochunk','dq','vinh','khanh','coctaik','g','kky','macchito',
  'kb',
  'kdc','stop','cheo','nchug','thic','foot','sting','hotdeal','ruoc','deal','cn','ph','tach','share','nhem','thue','khanhcasa','velvet','whole','milk','nuoi','vom','lunch','dy','trich','taibthais','miso','gv','tttm','oanh','whopper','kep','bk','xnah','😊','minn','xoe','khoing','huynh','theme','tini','xom','haizzzz','email','info','foodyvn','earl','grey','ray','hnoi','giad','gd','beefsteak','ngta','nice','toet','kvien','nai','nien','nth','ngop','loang','hana','thoy','qtqd','siu','mayo','khoanh','khay','buffet','hama','hoy','vit','xuo','takoyaki','taiyaki','xang','pepsi','klon','donut','😭','hic','tet','calmet','misu','deco','gach','troc','toast','applepie','blu','tamarind','nhuong','girl','rung','😔','oimeoi','urban','tokk','vun','fee','shushi','cm','th','true','mart','nguoc','gau','chep','iu','ks','book','agoda','chudu','facebook','topokki','poki','ia','trui','khao','oki','vuon','mcdonald','big','oach','mccafe','kbat','nhun','tuot','xeu','never','come','back','vtai','ni','get','khoc','ttca','chn','tip','buffe','po','gimbap','cuoc','ngi','thot','cabin','pm','container','uon','line','test','homemade','thuy','khue','trau','dingtea','bluberry','blended','mojito','sep','nx','haiz','tg','pasta','bacon','khuyet','dug','mof','bene','gato','vuen','op','oxi','bx','mrteppan','nolee','en','whipping','cream','anchor','stayed','well','everything','apparently','served','international','breakfast','heaps','choices','fresh','yummy','service','friendly','full','moon','dg','fa','fim','wwwbaomoicomdanangchoangvoihoadonantruahontrieudongepi','khot','😪','suoi','phau','oto','kdia','next','tiu','crepe','😝','party','night','town','chim','list','yummmy','bus','xoi','uog','vaoxem','thuog','musaki','mih','trug','bate','felling','pi','honey','ahihi','mayonaise','kfai','lotteria','baileys','😓','kkg','meantwinsfood','kmart','kfood','kimbab','odeng','gimbab','manor','keangnam','🏼','choikha','biu','mom','dthg','uoc','jo','😚','moikhai','thih','phog','cguyeen','bonus','delivery','nghia','khep','loat','😰','ngau','haha','khap','kcup','tieg','hug','giau','lm','celadon','consistenly','tasty','presented','excellent','quality','standar','customer','relaxed','atmostphere','regulary','recommented','students','colleagues','friends','highly','recommended','one','little','treasures','xuan','veo','yaua','hotel','up','sock','kiwi','smoothies','waiter','banana','healthy','south','bh','insta','kcai','🙈','run','hoph','hoh','laii','phoi','wow','nit','kchai','let','xai','macaron','show','prison','break','😱','👹','💀','zone','nvcu','ntrai','thin','viva','espresso','shake','jollibe','hari','tori','ns','shabu','meng','hjx','gianh','starup','chewy','junior','sefie','dom','relax','chese','mango','dun','alo','thung','pctrinh','fahasa','card','check','inbox','taste','hotdog','thing','latin','lagu','cari','dp','matj','hqa','uno','blah','khuya','pv','mich','spa','matxa','trieu','xoc','duyen','zu','cun','db','thwujc','peach','sur','bicycleup','hello','kitty','newdays','discount','frape','deliverynow','mop','bf','bc','hun','deer','lq','nuongs','diep','ledn','diax','lazy','lemon','barista','mint','cheesecake','mascarpone','ladyfinger','xen','baoh','quoi','bv','ngoanh','dit','uber','nhuc','pc','xop','torng','vinamilk','selfie','mousse','ngong','hocde','lim','khua','sag','family','xap','ipad','lum','ngung','pik','cont','dag','at','lava','cake','😘','😥','phobg','w','lem','giuc','hah','hk','sun','cuu','sing','omurice','😡','lucky','find','new','reasonable','prices','definitely','xiem','mackeno','nhet','mieu','nvs','twice','dishes','delicious','acceptable','price','beautiful','pax','variety','starter','main','course','eat','rich','prefer','asian','western','felt','better','shops','specialied','sweets','cakes','images','sets','crab','balls','fried','chicken','breast','sweet','sour','sauce','rolled','pork','vegetable','avocado','salmon','fast','furious','mak','✔','anm','nah','cookie','hamburger','⭕','blizzard','aeon','cahnh','sor','rating','mut','cucuta','chot','country','sake','end','lap','mobile','pachan','xun','maiiiiiiiiiii','zoooooooooooooooo','mixed','bery','terrific','icera','cv','kaka','khiem','mim','raining','today','arrived','easy','parking','clean','also','self','serve','ambiance','renovated','toliets','tables','patient','quiet','ppl','return','yes','bmi','ahcoke','freenhung','nhot','keke','vanh','vach','gias','chips','liton','tia','pa','expect','thoag','buo','chie','yoshake','chilli','bgio','kgram','grm','noid','😑','dx','atmos','imax','shock','ut','choux','konaya','thank','mass','potato','ghie','kie','niu','thuyen','gac','bth','quit','windmills','myla','pannacotta','hok','jajang','pancha','hssv','luongj','nuaaaaa','nhieif','cucng','ccao','toisekhongbaogioquaylai','cuop','oa','effoc','vstp','tobboki','imperial','tua','lie','✌','botay','khoac','canary','freeship','hog','🍕','💞','ctrinh','👏','kappa','maki','ntn','cul','william','buot','max','quynh','plan','page','chtr','kbg','ang','greentea','tuongf','ayyyy','chago','hest','oreo','team','nhoi','thun','zun','zui','hetk','huoc','mao','yard','hokaido','toping','kong','not','😣','bimexco','resort','quyt','trag','rain','lotus','bd','mag','cue','chof','nuaa','sakura','thuiiii','alisan','gongcha','kenh','piece','naruto','dirty','spaghetti','medium','rare','bolognese','sbox','mulberry','doner','kebab','clear','doneness','sanh','botanica','aythich','ngonnnnnn','👌','wings','meets','needs','awesome','hangout','spot','talking','savory','snacks','cool','drinks','fruity','jucies','speak','english','mistake','problem','always','happy','work','personally','every','time','give','plentiful','amount','bread','satiffied','meal','among','affordable','cafes','nothing','xuoi','nog','loay','hoay','bih','ss','marukame','kate','muop','cheated','sheet','ab','cmnd','hallowen','vy','kchen','phuclong','ltt','muh','qu','kubin','marie','curie','hqua','roll','kimpab','tsao','tropical','seafood','nt','garden','rammus','cedalon','kingbbq','uongs','minimum','cfe','ox','daiiiiii','ngoooonnnnnn','rooftop','shri','novotel','fail','saturday','crawfish','xan','hs','qt','foodcourt','hotto','pin','hik','friend','finger','thoat','contener','kug','ngag','ze','ngoof','bucks','world','pad','redvelvet','tl','😤','xia','khleang','ý','thie','kcon','nayy','daii','phomaii','noo','quayy','👎','jambong','hicc','wellcome','inh','royal','banha','cungc','dbt','ts','aao','vd','dl','nguong','pheo','katsu','yesinnha','tonuoc','ninh','gin','instagram','shipper','tnhien','bayh','vaf','giuong','lieng','trot','puding','beth','hit','ruby','iceblended','bis','snow','logo','bannh','milkbar','familk','tvt','huyen','ctr','chs','kian','mouse','ven','😌','zen','plaza','ngun','pass','gieng','hamberger','heinz','cola','sevice','rock','blues','retro','locate','right','middle','opposite','deck','financial','tower','popular','local','expats','try','fondant','french','apple','cider','delight','light','refreshing','chilled','glass','gentle','windy','breeze','cold','evening','🏻','croissant','nguc','khon','inn','tourist','trap','nhoang','chop','choe','dzo','maneki','neko','nghen','tiny','turtle','nhak','unclosed','mall','pk','chocopie','kara','xam','handmade','thichh','luonn','chiet','heta','cungg','hagia','mtheo','fillet','creme','brulee','fruit','tart','nheu','rao','custard','refill','khich','koneko','trat','bos','vem','hup','xup','toppoki','chef','special','mc','street','hiii','baby','boom','kcc','klq','meu','chus','nguyet','trum','chuo','pu','tag','diet','choz','gailung','satay','tomyum','vote','pioneer','xdj','mix','tut','reserve','rop','phucvuj','album','super','nphong','dv','trathoi','👊','xieng','nwax','hazelnut','foam','pl','cumg','cgiac','xat','millo','offense','play','heart','tummy','dii','ueh','cop','macha','qui','muffin','done','cinema','sn','bthuong','gru','signature','herbal','marinara','cabonara','classic','creamy','sandwich','htrc','thoc','password','nhum','khuye','axong','event','okha','monter','fries','giut','police','dzach','gout','mocha','iced','manhhhh','dooo','birds','nhoet','muachung','cuznv','feeling','hurt','mois','domino','texas','biscuit','gravy','nghie','grand','salon','bim','lia','zien','ji','cupcake','nhy','yum','snack','vvu','gelato','kper','hbua','hollys','strawberry','bean','peal','giue','tuu','knockout','doa','nganh','nhahangtieccuoi','mv','tempura','village','jumbo','escape','yourt','bve','toe','kiuuu','chiffont','frappe','toilet','couse','person','sukiyaki','hiyashi','collagen','banner','kohlan','lintee','quon','oliu','money','uhm','mail','hotline','cali','tokyo','deli','nkkn','nigiri','sanma','anisu','kemcuonthailan','nhatrang','viahe','anvat','wine','anvillage','morin','visa','phin','pudding','okay','mr','kyoto','nama','paschino','nhag','pullman','horison','internet','cocacola','ku','nhoc','cungmua','dm','sin','kbanh','quac','castle','stones','ic','lab','ngut','jun','sachf','😨','hyhy','suachuanepcam','hoangha','molten','yoghurt','leu','xenh','add','😀','😄','😬','pesto','bic','roat','kxien','liet','dec','valentine','bittet','diwn','tiennnnn','quaaaaa','thig','diieu','dubgs','rate','bungalow','miss','tokpokki','bankok','lagsana','higilands','hl','ichie','uom','podchong','pvu','tem','abc','xyz','wtf','tobokki','jollibee','phuot','mia','phuog','toppokki','kimpap','nuog','mascot','tiniworld','kakaka','ngiu','thick','meat','lovers','nac','checkin','od','kv','har','inox','nenphai','baskin','yokoso','😻','houjicha','bug','😗','✨','tobukki','ngonnn','amazing','absolutely','space','favourite','places','hcmc','single','dish','taken','chefs','seem','worth','trying','moreover','romantic','dining','pmh','jogging','crescent','phao','vrhoto','btw','thd','kthung','bocha','nguay','hutech','natu','house','link','playlist','hyang','pana','nydc','quotes','malaysia','face','vog','rieg','watcha','ld','bud','rem','vaiii','fusion','aioli','cainly','mysone','qoi','pai','ngc','tokboki','♥','pie','hdd','hd','meeting','vacation','macau','deluxe','pool','caravell','buom','soya','nuhng','chewys','nup','koh','samui','banhtrangbo','munh','hahaha','nd','domaine','anime','ht','kiet',
  'fake','cheesy','pops','hp','halloween','buu','moit','cupon','thuongf','bietj','minigame','oiiii','dooj','padthai','somtam','khaosan','road','thailan','oiii','nhaf','minhf','ngowf','devil','milano','toro','nta','tuom','ukie','hiuhiu','ngenh','ml','waffel','sachd','sh','zon','tep','gave','wrong','use','scoop','didnt','change','icecream','melt','awful','fuck','cr','woai','uni','ngoii','thii','migk','cucg','gr','dod','ngonngon','cacs','intermex','freeman','tt','concept','hht','buong','tria','broth','slightly','overcooked','spicy','nguofi','phone','upload','khuay','yon','ord','gas','brownie','phot','district','far','decent','taking','minutes','else','disaster','photos','false','advertising','looks','paid','per','tostada','missing','vegetables','small','refried','beans','dressings','veggies','shell','mexican','appetizer','filling','spending','going','picture','used','many','plastic','containers','tortilla','lamb','curry','mixture','seed','lover','wadan','–','footbath','ashiyu','onsen','yourmost','fomat','calogen','caphe','toai','bin','thix','website','wwwgiasuvietmycom','uy','hcm','luyen','khieu','guitar','organ','salat','pheu','nylon','tayyyyyy','bonito','flake','aonori','giet','kakakkaka','cassiopeia','shin','date','mesa','diaj','luk','yyy','tsu','chacs','boys','girls','micro','studio','pheeee','usuk','wagyu','chiller','traf','qway','company','original','😮','gheo','khogn','voice','bubble','chiem','clip','suhi','court','bthuonh','sasimi','hours','phie','ye','kee','🍃','yeud','tromg','❌','pingsu','marketing','xie','kmie','bistrot','beaujolais','nouveau','violon','bistrotdesaigon','gmailcom','cappuccino','ushi','dk','nhuu','soba','hia','svien','🏷','complain','souffle','sprite','fanta','dvu','lhoai','xah','male','oat','thech','vtu','😴','chakalakala','mum','phuoc','caik','intercontinental','bad','tofu','miya','bufet','lamington','diamond','💔','🍣','🙆','kemmm','br','coming','quadn','carpaccio','tare','cuzng','yummyyy','hdo','gam','dbiet','ck','khit','nhek','nia','ntmk','nthe','😶','haa','bieng','doremon','chieng','alfresco','spaguetty','suki','summer','mochi','perdu','bieg','body','charge','roast','😵','et','cjo','kon','liem','potay','kitkat','tks','ka','buger','₫','hichic','ngonz','dhcn','quayblaji','pensee','parafin','quao','habari','😫','carborana','🤗','pvc','phuv','hidden','😙','nek','hjhj','randb','black','popping','😐','😞','buou','qn','commment','qq','phen','ngen','foodgioi','soon','bem','nhech','alacarte','godzilla','transformer','khiet','chech','buddy','🐷','lhujc','tv','papasteak','starbeef','quau','gdinh','ktrai','mjh','sachi','tonkatsu','ika','maruyaki','tokachi','gyu','dcv','panchan','det','vuaa','goodbye','ever','toettttt','ik','giongg','chatime','soooooo','hanoi','drink','pearl','grass','rosted','visit','kcombo','sizekhong','lgbt','ciao','xuyt','corn','nubei','kngayquyen','manga','haiku','dvd','series','ghibli','tarot','lammmm','beoooo','ruc','triet','kamakura','loom','henz','lod','basa','akb','clok','clock','complaint','tinhhhh','greattt','seeding','oan','tinyurlcommatchayokosomenu','fanpage','mofcafe','matchayokoso','www','trao','koibito','crazy','birthday','gift','shizuoka','chasen','knhung','batman','soat','lancho','togo','efruit','capuchino','camera','okey','tuii','starbuck','sb','rex','duat','viettel','milktea','blacktea','alf','gdl','vodka','hmm','heng','toalet','rou','nilong','xiec','caravelle','rassberry','carot','maid','italian','vndpax','kp','tnay','ring','kmon','sirup','phile','quye','pro','😕','keran','call','toboki','yogust','xue','dzu','venh','goj','laj','huyt','ming','luat','boa','ngkhac','chun','hahha','vch','home','made','😸','berry','nma','rag','xug','secret','robin','nhieuu','hallyu','bulgogi','japche','idol','snsd','loser','bigbang','😛','wuand','tuk','bigc','huo','huye','reu','hetaasy','hc','moicu','khakha','gara','clb','verry','kgoi','void','munhf','suyt','bag','game','oky','tuen','seemed','abit','disappointed','came','mediocre','overall','pricey','ragu','choa','phung','vinmart','vm','reader','fastfood','chaicafe','hh','comt','total','refil','dooi','dzai','😠','youshake','highlands','kakigori','kxs','thpt','ksao','marriott','td','oromia','ngoo','oh','bakery','huan','fitness','yoga','flash','quo','rog','f','coo','paris','effel','opera','mfnh','reo','tago','klau','mauy','💏','yuzu','macaroon','nhuan','euro','baek','jeong','kvuc','guu','kahs','xcute','phui','tokkbuki','bibim','🙌','khongg','island','moo','tenderloin','striploin','chintai','tonkotsu','cashier','rit','cotton','candy','coconut','thoii','manager','buzza','khomg','anw','choka','winter','pmai','nhatttt','toett','bhtq','botchien','✅','🍴','beafsteak','🍹','🍔','ig','comeback','giog','chog','bog','xoay','lasagna','overpriced','copy','mainstream','erm','donnal','mashmallow','wao','toanh','bartender','foodee','candle','foodees','cvl','dhct','pcs','citibank','pay','sunwheel','outside','chocolat','tiramu','music','cubg','went','access','brother','ate','enjoyed','refilled','without','asking','modern','restuarant','shk','but','nhoeeuf','syrup','caffee','lih','er','coktail','pct','dtrai','amavo','wall','drawings','capucino','mphi','thut','jes','maldives','nvh','toy','gelatin','ecart','bokkhun','low','carb','⭐','tb','kfclotteria','dbp','musa','halal','aucostic','kf','jan','husky','nhui','whisky','haloween','bida','express','hahaa','cmnl','vcd','vinanuts','vinanutscomvn','hatdieungoncom','aroi','nsl','bake','think','arbre','nayyy','tinn','kiki','😎','💪','picnic','kakak','uih','cooa','giacdinh','gala','dinner','barbecue','invited','first','washy','salty','mention','smelled','terribly','fishy','stomach','pain','second','experience','tatses','standard','orange','literally','squished','separate','surgar','sorry','serves','least','water','lessen','side','carrot','tastes','worst','worse','last','tried','smell','overwhelming','finish','half','puked','getting','doubt','sign','preservation','hope','eating','different','giun','zombie','á','recep','welcome','zuppa','pece','vravioli','truffle','pollo','xiro','epresso','cuanha','loung','osaka','minnie','giatre','vipkhong','hokke','jamlog','balo','tauni','viien','majo','khonghailong','gem','center','nghinh','kool','urbun','rainbow','quyeb','block','coopmart','cmn','thichch','lens','trop','vinamik','blacklist','chipchip','harems','buffle','chee','keng','elisa','reviewers','title','jean','vest','leader','waitress','menh','momo','paradise','slogan','somi','caro','orion','rra','ava','nhod','sorento','mdc','hzzz','awada','nijyu','maru','mirai','shibuya','yamamoto','hih','chuowng','pane','risotto','carter','atiso','burgerking','bah','thag','izakaya','‎','davsleaers','‬','villa','biker','nghich','dthuong','fox','giata','tihf','sense','sale','kmai','xum','ghanh','gj','kno','“','”','yaour','quep','background','treu','rayu','tantanmen','vuvuzela','pancake','def','wi','fi','egg','bing','buihaus','socla','sori','nhiefu','shit','mah','thoange','brown','caramen','lep','sm','mik','queen','garosugil','injeongmi','tteok','kontum','mep','nuaz','sit','hihihi','lassie','khg','tarrot','crushed','purple','porridge','sieuu','fu','fe','ani','hanuri','caia','ctrai','marshmallow','type','aquafina','khui','kombo','lunches','drum','stick','pineapple','orders','designed','power','point','everywhere','people','carrying','downside','dtu','tuyenh','toang','majestic','shot','graphics','haagen','pbuong','thon','manzi','viba','loop','о','с','е','н','ь','д','л','г','т','в','я','а','б','ю','з','к','и','п','ж','х','у','щ','ч','р','й','м','ы','ш','fanny','fondue','rumnho','macadamia','fruitti','bailey','dman','hihii','quach','ihihih','giupj','brullee','google','freeze','quar','chtrinh','frappuccino','java','venty','mizu','dango','nikon','offline','thiep','girlfriend','reveived','average','massages','followed','pestered','tips','already','would','offer','yo','hazel','banhvaf','sandwit','monmon','laghim','kept','warm','expected','indochine','points','cunh','holic','truy','lag','chuon','👀','💙','ganh','dach','massge','namf','changchang','nka','pnt','patbingsu','doang','festival','monster','svh','xxl','del','admin','mnguoi','gscoop','menugi','kkly','liptop','pizz','commbo','viber','soan','tomn','mucvv','vv','roii','wth','complant','vtt','ieu','emm','cungz','nch','buoii','thy','guy','sx','typography','dennnn','kdl','xloi','nzay','thhuc','bthuo','gthieu','ccung','gyudon','muzuchi','funny','savoire','sk','thuyet','drive','nugget','donald','tuomg','anyway','sheraton','sefile','corpmart','luynh','aloha','khieng','ql','story','stoyrm','location','hard','cost','buy','cross','terrible','serive','worker','bring','tell','wait','mins','air','conditioner','open','comtam','baguette','tht','tokusen','sangrila','make','xoang','accaustic','ct','bla','nghiu','shao','peanut','dairy','👋','💖','coffe','cofe','chorrus','hian','public','pato','xuog','luxe','sofia','raspberry','canten','mochachoco','hiep','vam','xuynh','click','remix','kd','opla','zozo','glorious','😃','toam','elegant','apetit','coupon','dihmah','churro','chr','latn','tacos','young','vieng','giacobe','ðen','khov','troll','chag','dey','cjir','tuog','nguoif','spaces','tostas','starters','combined','flavours','chosen','area','decorated','bartenders','tapas','beu','confirm','luoon','tasted','crap','loud','annoy','dinning','group','paramount','goku','raku','ngoay','doai','banhxeobahiu','baengf','yagurt','ngayy','straw','hwa','philadenphia','dragon','suggest','sweetbox','inside','hitman','universal','maxx','napoleon','zong','nct','ddubgs','vantage','chg','aj','afternoon','thep','hanet','yt','pvd','ngonnnn','thommmm','memmmchat','slide','rim','inter','nos','garage','thath','furniture','luogj','keep','kgach','tsy','siawz','tiramitsu','tira','mascapone','ce','xhowj','kkigia','aminh','nhiw','nrieng','buildings','office','building','zodeong','log','tiger','flow','bnhieu','lux','hoocmon','pandora','vietnhat','nuocs','sunway','xelam','bistro','viaipi','racing','st','rd','ngech','crossaint','breadtalk','croissaint','denh','jour','vj','anmi','bm','vtau','tdtt','daddy','mommy','dady','huongw','tmo','lammm',
  'toco','yeeuuuuuu','kve','ðo','daau','cheeses','reviews','toihet','hinb','madagasca','cubics','mays','cuom','chinsu','master','hjhjhj','bami','creamcookie','kkhong','teramisu','sorbet','hhehe','quattro','formaggi','takeawy','station','aloe','vera','tala','lit','deepblue','khtaychien','fomai','traxanh','ruom','kdi','rá','cụ','ruo','reveiw','gold','metals','setdinner','pesce','italia','fine','patin','ctkm','cskh','trasua','trachanh','banhtrangtron','tradao','qia','rata','unlike','mami','gvs','hkia','cirle','qtrong','unfollow','cangtheo','thoilan','ngaoi','roa','ff','yougurt','doraemon','cicilia','totview','suite','oolong','school','kc','chocopho','ughh','hamham','report','passio','parfait','shiratama','soft','kanten','originals','float','nqay','thuonq','khonq','nhunq','vonq','nie','cheesse','thou','budweiser','cubgx','mood','vietsopetro','gien','dbh','zs','kcuon','thaisiam','brasil','masaman','boy','pop','vouchers','ntnay','jambon','bass','kimono','opening','poppin','oai','uoi','banhmi','daiii','xvnt','ngfay','yomost','😇','neh','imone','truye','ngpn','cbi','hoach','hazzzzz','chocochip','decoration','vuocher','mec','homestay','socolo','sisha','rie','nvd','maii','hehehehehhe','tobokkiiiiii','nguye','','cutisun','wep','ihihihi','kac','kai','trunh','cofee','ting','ghom','haisanngon','bmvi','chebuoi','sweetsoupvietnamese','chatluong','venise','heehee','form','hombua','pink','life','lanthang','enjoy','sapporo','cuhg','count','baddd','kok','paraoh','rk','sachh','mocktail','al','luog','luy','pg','grumpy','cats','origin','bff','decode','vietopia','linn','bibimpap','tnao','auto','nhim','khoat','haiza','match','forest','gpeple','cornetto','tth','sell','meet','hihiii','quam','caztus','giacd','hangover','muk','ongggg','lunnnn','nuaaaaaaa','laiiiiiiiiii','waffles','ssm','bb','tuyp','ucraina','manky','vvip','member','edm','quag','cnhat','kxe','dnay','katy','hezz','knguo','sketch','guom','mib','pannacota','cb','kampong','alice','nhiuuu','nheee','phett','daimond','maik','lick','bite','kemque','aaaaa','pt','exotic','impressed','satisfied','pricing','range','wondering','sure','attentive','smile','plus','brothers','openning','slice','moe','khy','okkk','veee','bologi','sia','kt','dden','hour','xuyennnn','orther','hixx','camen','eoo','korea','gh','kkk','khuyebs','bmy','phatsap','sala','thoanh','pdp','hale','snowflake','mayone','sapa','fill','pose','🍵','load','kkkk','hungry','kupbap','rosemary','goih','caesar','reset','heheh','♡','lunnn','tablenowvn','lvc','leevin','khachc','sdx','phucvukhongnhiettinh','khie','xjn','services','hmay','ping','pong','furin','khuong','comgadinhky','comgangon','comgaquan','chit','xoet','ummm','doong','alnhung','yc','ttoan','trin','😿','susi','exaggerating','yesterday','truthfulness','claims','ordered','susan','smooth','unbelievably','flour','starchy','layers','gelatine','glaze','pure','goodness','genuinely','knew','strike','conversation','aussie','owners','guessed','mind','chatting','receiving','payment','opened','months','ago','tasting','welldeserved','topic','vii','thieng','leng','😧','sallad','rasberry','chocomallow','omfgggg','fingers','brodard','or','pacey','fly','cupcakes','walk','lindy','boomieect','crunchy','bren','dark','pepperonie','chuog','kaffeine','shopping','dzay','cappucino','uk','trieng','dthuonge','khah','luac','bontrc','foodco','circle','americano','ame','hoet','jolly','zip','ci','luna','zio','ravioli','cesar','kkkeeaaa','bello','btrua','bankem','nilon','gumiho','makoli','drama','oppa','rainie','pach','zero','tick','specails','definately','chuta','lhas','ajisen','reivew','magic','pan','dunkin','dounts','coolata','bg','dsax','giuoi','dewns','nach','msf','channnnnn','junk','foods','thị','bỏ','kse','☝','canggg','catco','ney','cocktaik','wafflateria','cancel','grill','tih','lg','sangia','sangria','whippy','cos','lagi','cofffee','qian','facial','forma','sindat','teaz','yagout','lime','sugar','tequila','cointreau','coke','sex','beach','liquor','canberry','minhd','ace','kmet','ae','quaaa','hmmm','pacific','akuong','hg','barbie','bup','heineken','nhiedu','titi','hnau','ksan','sapinette','duocj','vevy','hv','tic','xuoc','traing','kiep','phiem','😩','ktqt','nkhong','color','boo','vayyy','vsinh','sexy','omg','ụ','dhsupha','ido','★','walnut','hiuhiuhiu','minions','nhok','bech','💚','bettola','yummi','tobiko','gunkan','dayyy','deadline','pq','whell','sago','flamenco','pianist','guitarist','camvang','fruits','trangtim','chococookies','vndchai','then','qun','hazzzz','sunday','early','coz','graffiti','streets','cube','rice','strange','others','indochina','cien','wf','phiec','xiteen','panacotta','showroom','lavi','heverly','app','chill','aia','nhec','cno','ohayo','hostel','moto','woa','coctail','galant','kxo','kkdia','tiamisu','carbonara','tosta','willing','need','klu','kba','cba','mjnhf','liferia','rw','deadpool','vienly','yaaaaaaaa','golde','gate','nuax','xxx','teokbokki','thoyyyy','chanse','thidong','rada','xoixoai','woody','jazz','jaeger','bomb','vuiiii','label','wild','turkey','sort','moka','tgian','upstairs','gho','courses','blast','kpop','ya','cosplay','ovenbaked','😳','🤔','😷','taiwan','bros','japan','💯','blender','cokie','iem','soa','misaki','tokkboki','trogg','nobita','xuka','lf','💣','daruma','kichi','biaaaaaaaaaaaaaa','🍺','nudget','🏡','duan','wind','font','creepy','kan','koreno','wesave','🙀','ngoang','ohm','pepper','soang','😹','thur','tttg','campuchia','costa','vuvu','philipin','solution','bottle','nhacs','thuotng','winelist','nhommua','zoi','hday','nhunv','nutella','anniver','kmua','toq','😲','uwifi','xg','spaghety','newworld','khongbasn','lassi','suyen','gionnn','owen','ttott','voeen','hjoa','bimbimbap','wing','nuggest','hag','aq','lita','vin','hand','mayonnaise','mytv','nouvo','atila','gua','ktx','ktqd','thayd','freedom','unc','nito','nokia','blackberry','memu','irasshaimase','arigatougozaimasu','ngin','masterchef','choan','cuxg','depk','chococapuchino','colorcake','nhaaa','ziu','hx','√','lavie','minnh','gie','mimi','sih','sto','lastnight','poor','nearly','waited','ask','women','bike','said','sarcasm','feel','respected','accept','apology','lack','responsibility','teokbukki','dukin','donuts','topless','hsau','frezee','taphj','nhic','kvoucherng','ngoaih','iwr','ohuc','mibhf','thichhh','dorayaki','sieng','tastong','zeland','muog','bangf','ghia','luing','tuing','dme','usine','wise','simple','barely','filtering','fix','arrive','eyes','angus','redwine','philippine','cinimon','nn','fakenpretending','imported','australia','joke','yet','🙏','photograper','umbrella','vuarat','onn','essentiel','foodpanda','xoong','train','spare','hpbd','joi','dazs','chak','uonga','fooder','gt','buble','gum','das','mobi','cubgf','×','gtgt','xuy','kdeal','chipa','quote','pleasure','treasure','btrai','choice','hobbit','gongchamilkfoam','plah','haduong','palace','msgiang','khonh','banhcuon','nhunng','ner','education','hoacj','cowboy','jack','scl','iph','fivimart','dhnn','ỏ','ngoac','circlek','parkson','mjnh','lho','hhom','mink','capri','kieir','jacks','bianco','dente','thaiexpress','khom','kj','oiisi','singapho','kcap','kcanh','🎉','kn','mrdee','wuan','beefstead','revieiw','zia','pnc','bookcafe','kimchee','kbinh','kodam','level','tmn','nestea','noia','lumos','boaro','soju','kgkg','kkgminh','nano','saty','volume','flavour','sapo','nguoigia','padbingsu','nyhon','mus','tonpeiyaki','tonpei','tteoboki','ddai','xuyet','crv','pico','punch','qdinh','caco','wen','davsleaders','chocomint','redsun','kangnam','amstel','uonhs','hotboy','hotgirl','pot','biang','roof','tirant','milimum','kkhach','dr','thiem','mica','cd','vfresh','ntq','bmc','bcm','mrpotato','lowcarb','cs','chah','dih','biettt','viu','oe','logic','balad','cover','espreso','tepanyaki','cones','base','thjx','yorgurt','mutat','maxi','cappu','pxl','tornado','hj','gyouza','edamame','tq','salas','great','ahahaha','text','poping','puping','qaun','alovera','dieuf','fizz','kumho','thuom','phy','ste','khyen','nhvay','bamboo','eooo','ih','nhunh','duot','desake','vado','tablet','coneen','outdoor','messing','totally','forgot','bills','start','heck','want','told','complimentary','forget','tttt','altitude','cotailk','ayy','kco','choen','anmitsu','seri','muka','sushibar','riep','cherry','👱','follow','socolate','nhvien','dng','thacccc','chinha','booking','cafemot','thailand','khaong','gabi','moiix','qc','chj','nudu','bukkum','chachang','thyme','zin','enboga','taats','thum','quuaa','dre','zung','zinh','heniken','openyourxmas','sp','trk','indo','aka','kgo','pattaya','sr','save','gibli','kung','nghip','ktoto','glory','huhuhu','tokio','shen','oni','tk','saigonvat','maximum','tteokbokki','kemcuon','pretty','plenty','seating','lush','limited','indoor','aircon','unfortunately','wife','weak','flavor','usual','probably','chho','lol','gabo','nuongdo','btrang','enjoyable','could','anywhere','guys','là','coop','yauort','huom','repeat','security','luluong','csgt','nuon','bec','takumi','nuni','dace','dnhin','youart','wheel','nghanh','brobingsu','crusted','barramundi','samdi','huog','kkie','helio','visiting','los','angeles','tough','overhyped','brick','packaging','items','cleanliness','wished','sseoni','powpow','nieng','pogo','milky','isushi','siusiu','kchao','tungf','changr','qly','mibh','qanh','👇','chich','close','hcung','crepes','bobaboptra','partea','cuccc','morroccan','creamcheese','xjtrum','pucci','terayaki','salong','mcg','fuwa','yolo','sula','ory','mcflurry','mcnugget','flurry','chili','joma','bagel','mienv','decord','dur','nb','dancu','bangkok','vchg','luaj','nasi','goreng','tunh','cmnr','nonfat','timecity','code','qeo','nuxa','nguoyi','bann','bja','buyt','nhong','brilliant','juices','mixes','runam','paster','gyoza','mabou','hyayakku','yoshinoya','tgioi','kvan','gatoplan','porevol','navy','pukin','vau','uqua','icho','ncrepe','isofa','😦','capuccino','🌴','🌱','photographer','shooting','cause','basically','cheapest','comes','means','tax','know','bothering','indeed','professional','waitresses','job','another','lavida','site','westlake','meito','cooktain','strawbery','hehehe',
  'hestes','promotion','iuuuu','kimpchi','holo','omega','dah','square','pn','head','pepperoni','hawaii','peppe','authentic','meringue','sofitel','el','gaucho','argentina','thj','ag','sgon','zach','sefiew','mì','quaaaa','skypark','guoc','houji','tartar','cc','socolachip','nylong','hajzzz','mup','💎','dubai','mchi','nhhi','chomi','nhhehe','patbinhsu','fired','koreana','cade','kmieng','favourist','sabo','everyone','starting','lunar','year','filled','flowers','watching','kind','old','step','five','stars','restaurants','performance','artist','fun','spend','hideout','cigar','bigboss','sicilia','cigarlover','🏿','hazzz','cayy','dxui','bajn','nxet','japchae','https','wwwfacebookcompagesgalaxycinenguyentrai','fref','gut','tngon','mytour','giuo','dra','okhong','gateaux','tarts','xoanh','xoach','mok','machiato','actually','screaming','spread','wont','worry','bumped','shorter','dude','crowd','classier','sluts','less','vietnamese','dont','suck','anything','trance','techno','figure','pessi','sech','bokho','bitstet','rafew','cargo','higland','travelers','architecture','past','exploitation','discover','beauty','needless','located','might','easily','nearby','maria','church','independencepalace','chy','niwxa','tee','hee','xingcha','cả','thạ','dọ','mó','giò','ghé','lạ','quá','nà','tronnawsng','decorn','sologan','phait','sgv','chayo','nioxin','massasge','esspreso','blizzards','extreme','snicker','regular','minismallregularlarge','artic','rush','wipping','dilly','takehome','tub','samsung','sales','😯','♧','hops','uay','robbins','sop','mahtcha','hoangdukhuong','toilette','kcay','dof','dos','tenshi','hanayuki','ramenk','vp','giod','loiak','locked','room','maroon','teng','cone','accoustic','frap','heh','sgtuy','thud','windsor','peace','ngonnnnn','cholimex','vealz','ltdh','gdcd','sgk','tomato','olympus','nhmi','khantru','foodyto','agar','hnc','dambon','delio','likes','shares','ready','hdn','newzeland','💋','fami','tuon','burrata','prosciuto','duck','nhattt','sieuuuu','almond','parmesan','tivao','cambodia','boba','viij','dungggg','sieuuuuu','huhuu','gaphomai','impianto','🌇','yoguit','scd','laị','hjxhjx','packed','chairs','telling','environment','busy','lead','innisfree','kekeee','cod','himalayas','taro','currant','ale','nhiep','khobg','nhieud','muons','fpt','icorner','everon','kid','quya','🎂','🎁','kao','nuggets','thru','qnhon','ngoe','dzui','kiosk','tug','cooktail','huongmai','wwwhuongmaicafecom','doat','factory','boxing','sauna','hlv','nuongt','virut','kimbad','tokkpoki','frozen','yeah','kingdom','redrock','scratch','nuoo','ngoet','ballricetc','trainning','troii','noiii','troiii','nop','tois','dzong','receipt','macarons','vid','chats','nhieukhong','tumbler','bminh','khocccc','chair','giach','tlc','cub','bober','ktr','xl','trem','dech','tdo','suop','kcuc','lii','suax','bl','vf','dieemr','bidrico','creams','duom','golden','satra','danish','paparoti','bibibap','beautifully','lovely','business','partners','clients','campo','salsa','swensen','vampire','diary','kphong','kgio','choichidanhchotuduy','kngay','dorm','knguoingay','lavabo','capuchiano','ootd','pet','qcao','choy','ntml','tonkatsudon','wasoku','vietcai','cl','cuaquan','juliet','lyncapuchino','coe','dayva','luca','xuyennn','israel','pizze','setup','tolet','lambo','urbanstationdth','▪','blacklist▪','freshing','tobuki','thooai','dor','nijuy','california','shashimi','💌','smothie','bolongnais','patee','microwave','bolognais','rated','bernaud','yersin','ulike','doii','lak','trendy','capuchinohanh','dangg','tony','moly','michael','detox','phuy','kcafe','warabi','riu','qat','suoc','teaspoon','kslice','kpot','teapot','khogg','mt','ninja','talk','vincombitexco','neon','roofboom','qr','hazenut','christmas','tring','ketchup','seoul','ksize','hettttt','robot','boit','khonng','hju','support','lug','chyen','tog','trloi','lou','dungj','hnao','tiramissu','nhuung','dance','korokke','meatball','lebanese','white','france','interesting','themed','various','areas','reasonably','priced','package','starts','usd','oceanfront','huge','however','ventured','pao','raunam','tpc','sz','tetvao','quaithao','hoiiiii','naooooo','thuowfng','nz','tdn','botchip','nhaaaaaaaaaaaaaaaaaaaaa','lotterria','angel','lofr','iponr','sim','cowifi','goongcha','dilmah','crumble','trufle','eland','four','seasons','discotheque','zk','tone','ips','donkin','nw','dfieeuj','ttis','tvv','maccha','korroke','lasagne','deens','patchan','ttoekbokki','haaa','💺','coan','phiu','sarang','💨','cupckae','omely','ngoam','👻','angfarm','pdb','chiwf','dayy','mash','slaw','ponagar','nhaan','panda','complan','hair','giap','remote','kimsa','xukem','‪','hihihiii','mark','host','tzt','lasm','singum','race','☕','join','month','choai','soj','gim','sony','michi','thuii','sami','dthuog','laam','hoiizzz','bqq','ser','yose','vz','ngann','dauu','qwn','jcat','klever','thanks','shaken','chunk','cafebook','sunlight','qtan','ekip','golf','voc','file','pts','btruoc','jolli','krusher','lott','vannila','napom','speacial','reserved','bna','message','bears','photography','nvay','liffhfhfhcuc','seo','ngdo','heu','spagetty','kqua','maison','jason','tonkattsu','bukkabe','mmoij','rewiew','vitamin','nick','nmi','langk','pros','rabokki','uopng','kset','treend','cooking','class','execution','cbis','trained','earlgrey','supportive','critical','nhiwng','york','cheseecake','ᴗ','ﾉ','´','ヮ','･','ﾟ','✧','＼','▽','＠','ノ','ヾ','｡','ω','tronng','hamboger','nhuoi','ltk','nguiif','gig','kang','hodong','concert','maca','zipbag','mayoisne','phac','woaaaaaaaaa','hehehee','zum','wwwfacebookcomdlbinhba','journey','dichvudulichbienwordpresscom','serrvice','irish','dtien','boston','nghon','tge','boong','kl','rudest','across','addition','rude','restaraunt','multuple','attention','ignore','dslr','mq','cantin','around','alot','maybe','morning','pleiku','thoinhung','ppppp','inst','video','tech','aoc','ngco','nganto','kinhh','gaz','sio','pp','spaghetty','blanded','svienvi','mushroom','hotpot','dooooo','neentof','nhoch','tangg','thiennn','lauu','chessy','bingboong','qoai','nhaa','convenient','near','central','comfortable','studying','working','ktruong','nghxi','okkkkk','loteria','lotterial','tornando','flycupcake','donalds','cps','lobster','thuya','pepxi','sog','allen','jolie','hiehie','nowzone','lhp','messages','lec','suj','aqua','caviar','ktv','khem','controll','naoc','slush','pitcher','superbowl','creambulee','sul','tab','recomend','wwwfoodyvnthanhvienalicia','bluebinhluan','berberchumm','tomboy','🏢','pco','👤','seach','pit','canhbun','mizuwa','sukem','sticker','guog','khug','toiiiii','poster','beng','hanu','we','expresso','muom','geylang','sanfulou','since','loved','unfriendly','pig','haizzaaa','freefill','mayonaide','ghenh','slow','wwwhoiandailytourscom','wai','tongay','superdong','superdonh','pataya','machiatto','benny','huot','➕','➖','nguyentuan','xaucu','kombap','mhif','ngoaid','chaybqua','ciu','snowwwwwwwwwwwww','toppping','agency','agnecy','hoyy','dzan','nhoam','dzoanh','buba','nuonglui','thanhoa','donuong','photo','minb','noori','laksa','saying','eatable','ㅠ','ruooti','hhee','plain','startup','ea','analog','audiophile','cchung','wedges','ballad','supprise','okk','ewwww','kq','rolls','kizciti','kizo','tpct','toppings','’','nhoe','ngoeo','guoi','japanese','fv','smoking','cloud','capu','trl','cozai','quannnn','ayd','luyn','lottemart','thif','thet','platinum','hambuger','rose','twister','vourcher','anha','gaugangabo','vientailoai','gingerale','thuot','hamster','sick','itali','panacota','tng','misou','puoi','bonte','gf','👉','mama','erro','eiffel','pos','miem','cosa','nostra','brunch','trng','ktrua','touch','duowcj','swensens','midnight','turkish','tours','jous','bibimbab','abook','ú','albero','thuye','nhungcaicay','fallin','eu','vuo','topkki','lacvoi','ngtrak','ngk','capsule','nespresso','spaghettie','🙃','minhg','xiennn','dannnn','shots','boheme','klan','bundaumamtom','🐱','dobodo','chusc','season','phunc','mngg','gab','cva','vou','cher','nnghi','kgelato','dalat','luonnnnn','🍰','mayon','moist','oishi','hyatt','ampm','nhatbanh','cokies','dd','tatvao','monh','hawai','yinh','jasmine','carte','daiiiiiiiiiiiiii','💗','kifa','xanhh','truu','hhd','browne','berberin','matt','kaki','bookmark','merry','tioan','dhbk','papa','hansol','kaengnam','caim','input','nest','kngiem','kgr','hotee','sparkling','oloong','birdy','hotbox','hkdeli','conn','porto','creap','ue','dressing','mic','amore','囧','╮','╯','╰','╭','mustard','kit','sodda','drove','turn','apprance','look','staffs','expectation','similar','surimi','megastar','ngkn','backround','smart','inch','hbo','starmovie','tlj','nhietf','motor','kgk','clover','tobbokie','addmin','started','years','stroll','sight','seeing','stumbled','noticing','crowds','walks','wrap','eversince','options','either','choose','later','fastforward','remained','spectacular','appreciates','customers','stays','makes','letting','everbody','purpose','caidia','condia','batkingsuuuu','meatlovers','supreme','grantinate','jamaica','ngoid','salda','pza','xuuong','alacart','salami','trieunguoi','wwwfacebookcomdiemtran','simoly','roy','voia','downgrade','intercon','patechou','truog','cuojn','ootto','cano','alaska','catton','cunnlg','oromiaad','pizzachees','cahoidutlo','pastatomsotkemdutlo','phank','oleary','quisela','dungs','bambi','gel','yupio','guc','thaong','ncung','overnight','lagm','es','dzoi','jerry','tianf','dbsk','jyj','papparoti','icls','mochimisu','corner','yancha','yutaka','dokoro','ngx','chom','ball','creep','tuf','oxy','pari','spray','😺','cocoa','uan','arabica','rongggg','rt','wonderfull','quesallidas','solfdrink','nachos','kpizza','dduoc','blueocean','march','bought','tickets','changed','ticket','something','careful','pateso','mhg','vinpearl','traicay','peo','week','crowded','three','sagion','lgi','mediun','pasley','cappuchino','lavender','tubgf','alone','lavendercoffee','beautifulplace','bumba','tradf','mfinh','ncon','pita','mongkok','colette','jay','yaout','inoodi','np','tachi','bq','policy','noisy','traffic','selection','diligent','smiley','indonesian','🎄','aiiii',
  'anhhh','vuiii','nhanhh','sauu','🙋','nhaaaa','roombox','tnhh','laoij','chery','homda','plong','kup','bab','hii','za','tmie','cuoid','nheng','goldfish','put','emotion','late','grean','ministop','xooang','hack','vibe','dumplings','ftu','hlu','dav','windmill','teriaki','boot','qbinh','topboki','hizzz','teokboki','maia','crep','tteokkbokki','muu','kksuat','fever','chow','hachiko','nhiey','mafa','sammoyed','kat','xamh','ngnhan','🐈','khuu','bookstore','lhacs','gateau','bioca','zoay','arpicot','tokkie','passw','🙄','yumfresh','vee','hunv','dangs','malu','ghen','betixiu','chiaki','nich','mointain','nhueng','thiz','feelingtea','tnv','longing','teok','mille','brownies','cora','favorite','kheu','nenmoi','hsinh','reception','quann','hamburg','supervisor','deleted','baba','trut','hayyyyy','sway','violin','sampa','beatbox','nhcac','','pat','nget','lanhtuong','nuttela','sesame','pandan','azuki','ayuki','cin','khonggg','nghieppp','sha','mnghe','margarita','marga','knguoiluot','dasara','dambri','moss','kiti','donkatsu','iconcoffee','gjan','aladin','nin','theu','nghincon','sad','everrrrrrrrrr','duocjw','phoomai','henna','demo','nitow','vndkg','ó','tian','fair','nhungz','nguk','bonsai','momotea','caiii','nguom','hhk','flyfood','qg','conan','voiii','gataux','giant','scoup','loveat','minestrone','respect','hich','latter','cafein','amy','khachh','gattino','duye','dethai','ceasar','hixxx','sorae','topics','trah','tm','trih','gep','dic','tiecn','khum','fc','ngonnnnnnnn','qadn','jhori','kuowjng','thf','mtra','ctra','tsam','cdie','gaenip','tokbukki','scm','death','vois','skewer','xech','saparo','deughe','mco','mhai','nhaat','troai','💟','nsut','vocher','elton','john','seems','hardest','word','nuonh','cminh','phieuca','trade','law','unsatisfiable','ach','ayyy','karoke','leechy','svc','beanie','giral','kios','chacac','🙎','number','reason','thichd','buocs','ol','alaca','replay','nghenh','quanb','chicago','neee','bone','puff','thuiii','shushib','sanshoku','roru','abokado','grilled','considering','whether','giom','majonez','jam','khenh','gido','khoogn','brainstorm','thuongo','yem','fresco','pz','baymax','🎊','banhflan','chanhrum','achuane','pca','yk','doq','chuq','hph','oceania','wang','lhoangr','tjif','zj','cpi','bucminh','cholau','nhanvienkhongnhiettinh','khongbaogioquaylai','foreigner','teacher','hox','tloi','beesteak','huxx','tvb','ngoat','dame','bbe','thooi','nhue','corona','bubwerser','kkhan','avo','reading','cheers','💦','shooters','destination','dilac','kfcmenu','bulogi','whip','gieo','laik','canada','bull','things','craps','crabs','complained','clunb','honh','haizzzzz','xieu','onevof','callifornia','noodle','sre','stores','table','otherwise','overestimated','waiterwaitress','alcohol','worthy','ngit','massa','download','mb','biem','serri','rayban','vattt','thuoi','wiew','vison','sophi','zat','tienhuong','khoong','dakasi','ngonba','puddinh','gà','xù','taico','nghekduo','cro','ohashi','nana','yahoocom','wwwfacebookcompapamango','designer','sauuuu','phanh','cj','blabla','greantea','nvpv','hamburge','qf','fin','kph','condensed','veef','kodo','thongg','centimet','weathervane','ratatouille','ratoke','tsua','fans','vtv','merdrinks','ghim','failed','suzies','rattt','shio','modum','｀','□','⌒','┻','━','ꐦ','⊙','曲','ఠ','彡','┛','ಠ','￣','┗','©','︵','ᗜ','dean','wwwfacebookcomanhnkobian','trsua','hotboi','gonta','pepermint','wlan','baddddddddd','define','huhuuuu','disum','marriot','combination','musy','nhuon','casual','dayh','phq','menly','tera','kbody','khinlieen','oii','dalatmilk','yuki','nguyt','dubg','trubg','nhubg','viiii','youtube','qd','khack','reopening','seflie','masage','uonh','sms','nuó','nhá','thé','gió','ngie','chá','gnon','relaxing','exciting','bnahs','aii','lauuuu','phomaique','leuu','trit','uych','kech','melody','star','nhonf','millecrepe','banhngon','molly','macj','saporo','lt','woods','kgia','bushido','disappointing','crispy','microwaved','frozenwaffle','products','giving','deserves','pabingsu','capricciosa','qyanr','yagourt','sea','xcm','idea','sochu','°','wabar','maika','tost','xut','zao','anngon','rg','unbelievable','samosa','bmbt','phoo','nes','monin','gaga','born','yamaha','svip','vus','qphu','daof','roiz','seagames','matsuri','👆','kbich','dnag','hoag','cock','tail','liqueurs','cow','hds','arang','serang','phoc','bangwool','mooktail','kam','gloria','kgrande','asia','dolce','cinebox','sanx','dunv','lyn','knhan','angolo','ngoap','bunhen','comhen','jolibee','uaabi','hanur','thoif','langbiang','kcg','ttok','lqd','hayhay','taz','toach','»','«','drip','keny','asans','khsd','yh','tobbokki','strony','iphone','hoie','mannn','ngyen','bthuog','kojac','skill','bussiness','moha','xoat','harry','hrs','khoabg','pepperonis','khoaitay','chuea','dezn','lonh','phhcj','mjeng','hwpj','quoai','dkien','mug','tobbokkie','haix','bobabop','xf','matte','thiangr','americar','becgie','down','ichi','bro','merely','charged','premium','screwed','waste','powdder','name','boardgame','suzuki','coem','lut','suongggg','cresen','tek','rooms','villas','buggy','tennis','nhh','jhach','magherita','rup','zeo','izzi','binhba','originally','glad','huflit','btx','gaps','pumping','ghita','truocs','information','desk','cons','chocobana','ghiennnnnn','caz','susu','vsky','okei','yummiq','kendo','nguoiban','cag','thcs','kcan','klang','trcan','hagl','led','hocquy','balcon','ufh','vag','obanyaki','nun','dop','petit','prince','hqben','ali','dky','casanova','saxophone','vespa','gssu','shipping','marshmallows','mist','oooze','ailu','lete','cuoiis','goik','parfeit','sida','vitage','yup','khoag','duty','booker','uhippy','ahh','dthoai','dena','moan','a','≧','≦','ｰ','hiccc','leoo','hou','yiu','slowly','cooked','rather','festive','scream','available','recomment','steam','spice','mipec','reng','weekend','depppp','milimet','tec','colagen','patbingsoo','dis','koncho','alifoodcorner','ccngogiatu','banhgaosotmatong','qbt','enh','phutan','phomat','thomnhan','yumi','🐾','💸','nheooo','hoen','velret','xx','nhaz','haz','caid','hunt','princess','frappucino','pe','bream','banhbanh','sponge','dinlung','beooooo','sub','wwwfoodyvnbinhdinhbuncathuanhong','uniform','sweetness','bowling','iii','sant','dilivery','tortellini','trongkhi','mana','hiet','thee','jkhi','sahcj','thuon','zipper','thinee','🌟','ggg','nhumg','xilytol','veu','tch','lutulata','kkhi','wwcattocnamvn','cattocnamvn','shanghai','fansipan','nuac','kachang','nvl','thichhop','genki','khtn','tae','eww','chachan','oang','lonngf','connect','ir','pap','nikko','ktieng','lquan','goodtea','thuongg','baop','deocor','ing','uki','akiko','dominonhung','phich','remnant','manwj','menma','chasew','honnnnn','agan','squid','rings','ntp','ndc','zy','yogurts','btt','ncl','tender','loin','greecy','kemtuyet','cachlamkem','dtr','cungs','paste','oregano','marry','tuongvi','keeng','sahimi','glance','looked','attractive','looking','bowl','moderately','sized','upon','confused','typical','silver','noodles','twist','xuonh','mayonese','kiec','tbt','takano','dusng','twilight','oddaay','chieuh','lannoi','punica','cholontourist','sydney','dup','sote','tihruhmeesoo','pick','marsala','etea','wink','vaz','maz','puc','pattern','robgj','chiuh','rome','huhuuu','oiiiii','traditional','together','comchay','chokka','bigxu','checkout','gpeople','kdua','toohai','kayak',
  'emos','velo','cuwois','photoshop','nguoinay','fkia','lungtung','majc','rucola', 'nghiennn','gen','hula','thoiiii','laiiiii' ]

fre = [4697,12401,4137,2193,7527,15097,3273,845,1483,3298,233,8302,5811,848,913,402,753,3085,887,2977,6363,5372,3748,4110,1441,3608,528,3002,1891,912,1221,1049,4891,2219,5558,1361,17163,600,2014,340,6450,8412,1680,6,1663,2414,12612,6398,2249,3307,1792,8,3886,1260,10312,2536,16937,546,6703,12,5700,2026,1130,7648,2126,1558,5498,3321,3476,3506,3076,16402,13,330,4228,1145,623,3499,1096,5430,124,2484,5649,4461,175,758,8951,5112,1,2796,1093,1948,3242,621,2486,1401,853,4836,1083,5001,2221,302,353,5215,4998,23,292,1207,5267,1458,1889,5802,3492,1156,741,564,2706,3146,6635,2708,893,1484,1591,2738,2578,2802,436,850,1496,4508,12358,1576,499,1079,2963,1943,1023,411,831,735,753,733,133,1875,328,968,579,694,257,2850,8117,261,7128,3730,2749,7235,1647,289,2293,2588,10414,860,1848,323,3137,854,2428,378,1296,1658,153,6397,1334,2881,355,14,3063,1283,1582,1358,2079,378,44,2383,195,2226,763,2273,5,383,402,651,1107,1736,5849,832,383,547,487,4826,1831,1045,1683,431,18,373,486,580,257,720,198,4227,523,3762,3955,259,330,1814,1301,1098,1,2332,8,33,1847,8,11,246,306,822,514,1410,470,254,474,30,117,3,709,1251,496,470,2391,23,5625,833,1989,710,2730,372,14,133,2564,49,999,363,874,1246,858,346,1325,4,856,187,3878,485,853,1819,1157,2546,3452,665,596,929,499,1067,970,2001,799,1433,99,2871,819,198,223,1486,489,881,31,13,563,3281,637,256,608,1005,4728,51,1078,782,3679,274,276,1085,404,825,1199,617,724,928,131,36,18,2711,6,324,1690,751,428,1224,1063,3368,5839,1196,633,174,70,69,2004,732,1780,1,598,567,304,1949,41,690,146,131,321,725,124,325,111,1138,2025,1068,74,7,630,7,220,107,256,212,1087,275,1906,6448,1241,1405,7731,3876,103,731,48,2264,35,2254,252,1464,53,404,832,176,187,2633,33,67,1638,81,665,278,127,385,231,348,68,570,91,104,7,595,279,628,1381,1041,268,175,425,689,619,3547,1088,99,1415,442,1246,27,421,102,1076,425,37,1116,373,538,14,2,1192,850,1388,768,5,613,39,2,167,150,392,11,976,148,1,823,557,505,457,1959,76,1179,956,386,264,745,319,332,2707,212,524,490,137,718,647,646,1600,1146,51,665,385,154,194,634,210,30,25,29,93,1038,147,38,1782,57,666,1358,319,148,426,257,942,66,137,1052,128,392,233,189,142,36,168,62,321,2,10,62,16,91,6,18,1,1,6,44,313,1,4,9,11,8,1,1,18,138,214,23,134,24,13,1,134,749,289,1267,55,366,296,131,1628,315,23,84,70,114,100,868,386,590,55,262,508,530,9,979,839,21,212,1226,26,29,240,18,1218,140,457,42,477,277,10,902,8,148,1814,348,2,6,250,1447,230,94,339,329,91,78,35,1172,797,42,172,508,265,169,686,950,1577,271,1083,405,366,216,73,85,1532,61,579,71,33,24,1,8,6,3,4,2,3,1,1,1,7,1,15,55,1,1,1,1,1,1,3,40,41,1,1,75,993,810,375,153,80,92,4,1232,344,549,395,42,16,61,1914,519,22,165,163,10,31,526,8,701,72,192,3,172,68,1130,181,547,48,490,199,595,41,70,62,438,7,143,102,24,23,34,22,48,59,250,464,896,12,47,16,480,1005,247,173,202,570,118,9,173,1,31,42,1,52,58,264,582,261,99,143,66,105,101,480,391,185,320,549,351,13,570,198,149,16,439,3,405,200,72,3,680,1,114,2,133,64,400,2,214,149,20,638,149,84,515,24,84,218,20,5,21,81,1,2,10,84,1,127,4,22,70,161,218,342,240,70,57,2,274,105,16,8,103,88,1,247,1418,302,55,258,40,6,28,5,5,193,222,30,289,282,35,45,361,44,80,125,73,6,29,12,106,13,72,23,7,31,130,165,61,98,8,179,160,20,37,377,102,41,201,22,91,21,697,11,258,203,56,5,144,16,160,54,9,21,154,5,19,18,65,78,136,299,127,45,3,26,74,186,19,161,157,44,19,24,103,8,40,45,68,5,27,66,217,22,76,1,10,14,377,204,40,211,64,3,388,5,18,37,7,252,29,31,67,258,81,38,255,28,12,9,259,4,137,98,18,3,24,106,18,52,43,8,285,26,80,6,42,30,52,153,239,60,145,184,376,1,47,197,11,11,123,160,10,67,71,21,63,16,109,7,6,44,7,77,206,131,488,1,112,112,219,40,61,101,8,24,33,159,6,83,187,15,14,1,54,5,9,16,64,19,139,16,85,395,191,39,1,42,13,78,56,1,15,209,394,380,107,16,204,567,53,353,426,12,99,150,9,12,2,86,2,23,1,1,20,10,36,42,34,23,297,97,66,87,111,9,15,162,8,329,17,12,112,35,118,166,306,154,14,10,11,4,21,27,7,11,8,234,18,70,76,175,96,325,86,79,90,55,24,16,103,100,70,53,280,86,34,142,76,430,1,5,57,118,295,26,61,88,131,16,13,224,134,35,50,286,3,27,136,42,39,11,6,519,1,209,87,8,16,194,45,211,28,109,1,16,10,4,25,203,18,65,78,3,22,2,119,18,81,9,40,34,5,44,1,14,164,27,10,8,7,37,9,74,25,93,4,2,3,88,75,5,16,4,13,67,12,65,65,11,15,73,1,21,6,63,175,253,1,2,2,53,68,123,25,3,18,454,178,26,44,52,1,1,17,29,2,28,1,85,2,3,72,12,149,129,22,65,6,32,4,15,5,138,1,2,162,2,3,3,22,1,2,112,1,9,17,54,46,4,26,46,13,13,5,6,9,50,1,2,21,14,28,40,45,1,118,47,69,89,5,24,7,65,184,64,11,58,104,1,64,24,12,136,26,36,64,38,12,5,2,40,1,61,55,8,30,2,40,25,1,3,56,4,180,1,136,27,26,2,3,19,68,1,19,101,13,10,2,2,44,1,152,22,17,3,46,315,8,22,1,1,31,16,38,61,49,50,25,3,5,13,13,51,6,1,20,12,109,17,17,8,45,53,14,33,66,46,1,1,1,22,1,43,12,45,4,1,37,3,13,6,1,3,297,29,1,13,34,43,84,6,56,4,46,13,39,18,29,5,1,110,52,4,1,26,42,153,131,11,1,33,36,101,6,2,2,169,2,48,11,1,2,1,2,6,11,8,50,17,47,94,10,43,8,39,21,2,1,1,1,36,36,30,34,96,1,7,161,10,1,138,43,1,6,4,9,16,7,5,58,1,45,2,2,1,1,12,1,3,95,1,37,5,159,32,73,1,2,6,1,11,2,28,1,3,4,30,5,64,7,2,59,1,42,105,42,15,6,32,13,6,15,61,4,45,10,1,9,1,37,9,15,12,2,1,24,39,1,18,35,20,2,91,1,1,8,1,2,21,10,37,2,4,27,43,56,31,65,66,15,11,70,3,21,2,33,17,5,28,9,18,1,32,3,12,9,1,42,4,4,117,2,3,5,23,1,2,13,4,2,1,3,3,3,4,2,3,13,56,64,27,45,11,27,34,2,51,72,18,18,9,28,7,14,57,171,1,6,120,20,37,4,21,47,2,15,110,81,185,1,1,11,47,7,36,1,1,1,18,5,61,23,3,38,7,28,1,6,25,23,2,30,59,98,47,50,28,43,2,1,42,13,4,1,7,52,11,68,11,23,10,3,22,20,65,1,26,26,25,1,62,16,26,1,1,61,9,17,15,80,8,22,8,28,3,12,12,14,9,61,3,22,15,1,36,46,11,6,14,4,46,8,13,16,31,7,17,2,54,1,7,2,4,9,24,69,1,1,13,6,1,5,2,2,1,3,21,14,36,18,47,5,28,9,6,1,23,23,47,3,7,30,2,32,90,34,8,6,5,39,28,1,12,316,20,1,16,1,56,10,2,1,6,9,3,13,2,36,2,15,17,12,2,2,19,3,7,4,1,20,1,7,35,5,19,5,20,1,2,6,1,19,11,81,3,8,19,16,46,29,1,5,3,12,14,3,1,5,1,4,11,1,3,1,1,1,1,1,1,5,10,4,10,9,1,26,32,17,8,26,6,68,20,10,8,4,2,36,7,30,6,9,1,1,3,20,5,16,12,51,68,10,8,1,2,24,3,3,9,1,1,4,1,5,8,1,3,4,28,6,1,10,23,1,7,4,2,39,8,3,16,11,14,44,1,2,40,76,3,12,16,3,1,2,24,1,1,4,2,14,27,65,2,78,15,53,10,48,8,39,9,1,12,1,1,4,8,5,13,1,1,4,10,3,18,2,4,1,45,1,3,3,13,1,45,23,1,1,17,5,2,11,3,5,1,31,1,57,1,7,13,31,28,1,12,10,5,12,20,9,56,23,4,1,26,20,21,40,84,23,1,28,26,16,2,30,65,61,14,1,45,2,3,12,2,2,5,2,1,30,20,2,5,4,8,1,16,6,1,1,1,5,5,5,6,1,4,3,1,4,1,1,1,7,1,2,8,1,5,20,1,7,6,38,1,1,1,3,9,10,2,20,31,1,1,66,23,10,6,54,1,2,3,43,8,59,3,6,5,123,1,1,8,1,1,6,1,1,1,6,19,10,8,1,6,2,3,3,6,8,1,11,4,1,1,5,1,4,3,10,3,2,1,1,40,5,4,10,1,3,2,9,9,3,3,40,19,3,3,5,1,1,1,37,10,3,1,11,26,4,1,2,1,10,10,43,8,27,32,28,5,6,1,5,87,8,1,12,1,3,1,2,1,1,7,5,12,1,2,2,39,14,25,1,2,1,2,4,2,7,6,38,1,28,59,1,1,6,22,9,42,16,1,2,10,8,1,1,3,2,41,13,31,5,2,23,1,9,10,1,2,4,10,27,15,1,29,3,17,2,1,7,12,1,1,2,30,1,2,7,26,3,1,2,29,11,7,3,4,1,2,4,1,1,75,3,1,2,56,1,1,1,3,2,2,1,1,2,11,14,3,1,1,2,1,1,9,23,3,1,6,26,2,1,1,3,1,8,1,1,1,4,12,4,17,18,5,6,5,1,5,1,1,3,3,1,4,8,2,3,5,5,1,1,1,11,9,4,6,3,13,14,15,1,1,1,1,1,4,4,1,1,15,3,1,6,1,4,44,24,3,3,1,5,1,4,2,16,1,2,4,15,1,1,6,16,3,8,15,9,1,7,82,17,2,1
,1,4,1,16,3,1,1,7,17,1,1,1,37,1,8,10,17,22,3,1,1,38,3,4,9,1,2,2,13,2,6,3,1,19,4,3,2,5,12,2,1,2,5,18,3,5,1,4,33,13,3,10,3,27,4,2,4,5,2,9,1,6,1,3,1,1,1,1,3,2,3,1,13,8,4,10,3,3,6,2,1,1,1,1,4,31,1,131,1,7,10,3,2,1,2,17,10,8,1,1,23,1,1,3,1,27,2,1,2,25,8,3,6,3,2,1,1,1,3,15,21,6,16,2,24,2,13,11,1,11,1,3,28,10,5,12,10,22,6,3,5,3,2,3,7,2,5,5,4,3,9,5,1,1,3,14,9,1,1,41,10,1,8,1,6,8,1,5,1,5,1,1,8,6,16,1,1,26,1,2,2,2,1,2,1,17,15,19,10,6,12,21,9,2,4,4,1,4,5,3,18,2,1,2,23,17,1,7,1,3,8,15,1,1,3,28,8,1,1,1,5,3,1,9,2,1,11,21,7,1,22,3,12,8,2,3,16,32,2,11,5,1,11,1,2,1,11,10,1,1,4,1,15,5,1,2,21,2,6,13,2,1,9,1,1,6,36,1,2,6,1,6,2,1,3,1,4,4,2,5,5,4,33,37,2,3,1,1,1,1,2,1,1,1,1,1,4,58,30,13,1,5,3,2,2,1,5,5,6,20,2,2,5,3,6,1,1,1,1,9,3,1,5,2,1,1,2,7,17,2,10,14,55,12,1,1,1,7,8,3,6,3,1,1,1,1,1,1,4,3,5,5,1,5,1,6,1,8,1,15,9,7,3,8,7,8,13,38,1,1,8,9,1,3,4,4,4,5,1,34,9,6,5,2,9,1,13,8,16,12,4,2,4,3,16,7,1,7,2,3,3,2,5,1,1,1,6,2,2,2,1,3,1,2,9,1,1,4,4,1,2,3,2,31,2,3,1,12,3,1,1,10,4,2,7,1,4,9,1,5,1,1,1,1,25,1,9,23,5,1,5,3,1,1,2,2,1,4,6,1,1,6,2,1,1,3,2,6,1,3,1,13,1,1,1,7,4,19,1,1,1,1,1,2,1,3,2,1,2,1,1,2,2,1,1,2,4,4,6,1,3,2,11,1,1,4,5,27,2,3,2,2,2,4,4,1,1,3,2,1,14,1,1,1,2,10,1,1,1,1,1,3,4,4,13,1,2,1,1,4,1,6,1,10,1,18,9,15,6,2,2,4,1,5,3,1,1,1,1,2,5,3,1,2,2,9,1,2,2,1,1,1,2,2,1,5,1,2,2,2,1,1,1,2,1,1,2,5,24,1,1,1,1,1,1,7,3,1,19,8,1,14,10,15,6,7,1,21,1,1,1,1,1,1,3,1,1,4,5,2,1,1,1,1,3,1,1,3,3,1,5,2,3,1,1,7,3,2,1,2,1,4,20,5,3,8,1,4,4,2,11,1,1,1,1,4,2,2,1,1,4,3,3,1,1,1,10,4,16,4,5,3,1,3,14,1,8,2,4,1,1,1,5,11,1,1,1,2,7,3,3,10,10,3,1,3,1,1,1,2,1,12,2,1,2,1,8,1,5,24,1,3,1,2,25,12,3,4,2,8,7,2,4,1,5,4,25,1,1,14,7,1,1,8,2,4,9,4,7,2,2,3,8,8,1,1,1,1,1,5,1,15,1,4,2,1,1,14,7,15,7,12,7,10,16,7,4,1,3,10,1,1,1,3,13,1,1,1,1,2,3,8,1,12,2,1,5,2,1,2,2,2,1,1,1,1,1,22,10,1,7,5,1,8,1,8,1,8,17,1,1,1,4,2,1,3,1,1,6,3,1,4,1,1,2,1,21,1,1,15,4,1,1,2,5,2,1,1,1,4,1,1,2,3,1,7,2,1,3,27,2,2,1,2,1,1,1,1,5,1,2,1,20,8,7,1,16,12,6,1,1,4,1,1,1,4,4,4,4,1,4,4,1,1,3,4,2,1,4,3,1,3,2,2,7,2,13,1,5,2,1,5,3,3,1,1,1,4,7,3,2,5,3,3,9,9,5,8,1,3,2,2,3,2,3,11,1,4,1,1,1,12,1,2,8,14,4,8,1,2,1,1,1,6,4,2,1,1,11,4,34,1,1,1,1,4,7,2,4,1,4,4,14,3,1,1,4,1,17,1,2,1,1,2,8,1,16,2,1,4,3,1,1,3,1,5,6,6,1,2,3,12,4,15,1,12,1,7,1,6,1,1,1,1,1,8,18,1,3,2,1,1,1,2,5,2,1,2,2,5,4,2,1,1,1,8,13,2,2,3,7,8,4,1,1,1,1,1,2,1,1,1,3,5,2,3,1,1,5,5,1,3,26,7,2,2,1,1,1,2,1,4,6,3,1,2,1,2,2,1,4,2,4,2,1,6,3,5,2,1,1,4,1,3,1,1,2,1,8,1,9,7,1,1,2,2,1,1,1,1,3,1,2,1,2,1,4,5,1,1,1,1,1,4,1,7,1,1,1,1,2,5,1,1,4,6,5,1,2,1,1,1,1,16,1,1,2,1,1,1,1,15,6,4,1,1,1,1,5,4,2,1,5,1,2,2,1,2,2,1,1,1,3,1,4,9,1,1,1,1,4,2,1,3,1,6,6,4,2,1,4,3,2,1,2,4,1,4,2,1,1,2,1,1,2,1,8,1,3,2,1,1,1,2,1,1,1,1,1,2,1,1,1,1,5,1,1,1,1,5,5,4,4,1,10,1,2,3,3,1,1,1,1,2,2,1,1,1,10,2,1,2,2,1,1,4,14,1,4,7,1,3,2,1,2,1,1,1,1,1,1,3,3,4,2,1,1,1,2,1,7,1,10,1,1,2,1,2,4,1,12,3,3,1,1,4,11,4,3,1,3,1,28,26,2,1,7,6,1,1,7,10,2,1,2,1,4,1,4,1,1,2,12,1,5,29,7,1,13,12,1,1,6,1,7,1,2,6,1,4,1,1,1,1,1,2,7,1,4,1,1,2,1,1,7,1,1,1,2,2,1,3,1,1,2,3,1,1,1,1,1,1,2,1,7,1,10,1,1,1,30,13,24,23,2,12,10,6,22,7,7,21,5,5,6,10,20,7,3,1,8,4,1,10,6,3,3,1,3,2,1,1,1,5,1,5,10,1,1,2,7,7,1,1,5,2,1,2,4,1,5,7,1,1,3,1,1,1,10,3,7,2,2,1,1,1,1,2,1,3,1,1,1,2,1,4,4,9,2,2,9,3,2,1,2,2,3,9,2,1,7,14,1,2,6,1,1,1,2,1,2,1,1,3,1,1,5,2,2,1,1,5,2,3,5,1,24,1,2,1,1,5,1,2,1,1,4,1,4,1,2,1,3,13,3,2,5,1,2,3,1,1,1,3,1,3,5,1,4,2,3,2,1,3,1,1,2,2,6,2,1,1,5,2,3,1,1,1,3,3,1,8,34,2,2,2,9,3,10,14,1,2,1,1,2,4,7,1,7,1,1,3,3,1,1,2,3,6,1,1,11,1,2,1,8,1,1,1,1,3,4,3,1,1,1,2,6,2,1,10,2,1,1,1,1,1,1,4,4,1,1,1,6,1,1,1,2,1,2,4,1,2,1,1,3,1,1,2,1,1,1,1,1,2,2,5,1,1,1,2,2,2,1,1,2,1,3,3,1,1,3,2,2,1,1,11,3,2,1,1,1,1,3,1,1,1,1,3,2,3,1,1,1,1,1,1,1,3,1,5,7,1,1,1,1,1,1,2,4,2,2,1,3,2,1,1,2,2,1,3,2,1,1,3,1,1,2,1,1,1,1,2,2,1,3,1,1,1,5,1,1,1,1,1,1,2,6,1,3,1,1,3,3,2,1,1,1,14,3,3,1,19,1,1,3,1,5,2,1,1,10,2,5,1,1,1,2,1,1,3,3,2,1,1,2,1,2,1,2,2,1,1,4,1,1,1,2,1,1,2,4,1,1,1,2,2,4,1,1,1,2,12,9,1,5,2,1,1,1,2,1,1,1,7,3,4,2,2,3,1,2,1,4,5,9,1,1,5,3,4,1,2,2,1,3,1,10,1,3,1,5,1,3,3,2,1,10,2,2,4,1,2,2,1,2,1,2,1,1,1,1,1,1,5,1,2,2,1,1,2,1,5,1,1,1,1,1,1,1,1,2,1,1,5,3,1,5,1,1,2,1,4,1,1,1,9,7,6,5,5,2,1,1,1,1,1,1,1,4,1,1,1,1,2,3,1,1,1,1,2,1,2,9,1,2,2,1,1,1,1,7,2,4,4,1,1,3,4,1,1,1,6,2,8,1,2,9,5,2,2,3,2,1,2,1,1,3,1,2,2,1,1,1,1,1,1,2,1,1,3,3,5,6,1,1,2,2,1,1,1,1,2,2,1,4,1,1,3,1,1,1,1,7,1,2,1,1,1,2,1,1,1,3,3,2,3,2,2,2,2,1,1,2,2,3,12,2,2,2,1,1,1,1,5,1,2,1,1,1,2,2,2,1,1,5,4,1,1,1,1,1,1,8,1,1,1,1,1,3,1,1,1,1,1,1,1,1,2,1,1,1,1,3,1,1,1,2,1,2,1,3,1,2,1,1,1,1,5,10,5,1,2,2,1,1,3,3,1,4,2,3,1,1,1,1,2,1,2,1,5,2,4,4,1,1,1,1,1,2,5,1,1,1,5,1,4,1,3,1,1,1,2,1,1,4,6,1,1,2,1,1,3,2,1,1,1,2,2,1,1,5,2,1,1,4,2,1,1,2,1,1,1,2,1,2,1,4,1,1,1,1,1,9,2,8,7,1,1,1,4,1,1,1,7,2,1,1,1,3,2,2,1,7,2,2,1,1,2,2,1,3,2,1,1,1,2,2,8,1,1,8,1,4,1,2,3,2,1,7,1,4,2,11,1,1,2,3,1,5,5,9,1,1,1,1,1,1,3,1,2,1,2,2,1,2,1,1,1,1,2,1,1,2,1,3,1,1,1,1,1,1,3,3,1,1,1,1,5,2,1,1,1,3,1,2,3,3,1,2,3,6,1,1,1,1,6,1,3,5,1,1,1,3,13,2,1,2,1,1,1,1,1,2,1,1,1,1,5,3,4,5,1,1,1,1,1,3,2,1,1,1,1,2,1,2,2,4,10,3,1,1,14,7,2,1,21,2,3,4,1,3,1,1,1,1,2,1,2,3,1,3,1,3,1,13,1,10,1,1,4,1,1,1,2,1,1,1,5,1,2,2,6,4,2,2,4,1,2,2,1,1,1,1,1,5,6,1,2,1,1,1,1,1,1,1,2,1,4,1,1,1,1,1,1,1,1,1,6,1,1,5,4,9,1,1,1,1,3,1,1,2,1,3,1,1,1,1,1,3,2,1,1,1,1,1,2,1,2,8,5,1,4,1,1,1,1,2,1,1,4,1,1,2,2,2,1,1,1,1,1,1,1,4,1,2,1,1,1,1,1,1,1,1,2,1,2,1,1,2,1,2,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,2,1,1,4,4,1,1,1,2,1,2,2,2,1,2,1,5,1,1,1,2,2,2,1,1,1,5,2,3,1,1,1,1,1,1,2,2,1,4,1,3,1,5,1,1,2,1,1,2,1,8,9,2,1,8,1,1,5,2,1,1,3,2,1,1,1,1,1,1,1,1,1,2,1,12,1,1,2,1,1,2,3,2,1,1,1,2,1,3,3,4,1,8,1,1,1,1,2,1,3,1,1,1,2,1,1,1,1,1,1,2,1,1,1,3,3,5,1,2,1,1,1,2,5,2,2,1,1,2,1,1,1,3,1,1,5,1,2,1,4,1,1,1,7,2,3,1,2,1,1,1,4,2,1,1,2,3,3,1,4,1,1,1,1,7,1,1,6,1,1,1,1,3,1,2,1,1,1,1,1,1,4,3,1,4,1,1,1,2,1,1,2,2,1,1,2,1,1,2,2,1,1,1,1,1,8,2,2,1,1,4,3,2,2,5,2,1,1,6,1,2,1,1,1,1,1,1,1,1,2,1,2,1,7,1,1,1,1,1,1,8,2,4,2,1,4,2,1,1,3,1,1,1,6,1,1,1,7,1,1,2,1,3,1,3,1,3,2,1,1,2,1,3,1,1,1,4,1,1,1,1,2,1,3,1,3,2,1,1,5,1,2,2,1,1,1,1,1,2,1,1,3,1,1,2,2,1,2,2,1,1,1,1,1,1,2,1,1,2,1,1,1,1,3,1,1,1,1,2,1,1,2,1,1,1,5,1,2,1,1,1,1,2,3,1,1,2,8,1,1,1,2,2,4,1,1,1,3,1,1,1,1,1,2,1,1,2,1,1,1,5,1,1,1,1,1,1,3,1,1,1,2,2,6,1,1,1,1,1,1,1,1,1,2,1,2,1,1,2,3,1,1,1,1,1,1,1,1,2,1,3,1,1,2,1,2,2,1,1,1,1,1,1,5,1,3,1,1,1,7,2,2,3,1,1,6,1,2,2,1,7,7,3,3,2,1,1,1,2,1,1,1,1,1,2,2,1,2,1,3,1,1,1,1,1,1,1,1,7,2,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,4,1,1,1,1,1,1,4,1,1,2,1,1,3,1,1,3,1,1,2,1,4,1,1,1,1,1,1,1,1,1,1,1,1,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,2,1,1,2,1,1,1,1,1,2,2,1,1,1,1,2,2,1,1,2,1,1,1,1,1,2,1,1,1,2,3,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,3,5,3,1,1,1,2,1,2,2,1,1,4,1,1,1,3,1,1,6,1,2,1,1,1,2,1,4,2,1,1,1,1,2,1,1,1,1,1,1,1,4,3,1,2,1,1,6,1,3,2,3,2,1,2,5,1,1,1,1,1,1,1,1,1,4,2,1,1,1,1,1,2,1,1,3,1,1,1,2,1,1,1,3,1,2,1,1,1,1,1,1,1,1,2,1,1,2,1,4,3,1,3,3,1,1,1,1,1,1,2,1,1,1,2,2,3,2,1,1,1,2,1,3,3,1,1,3,1,2,1,2,1,1,1,1,1,1,1,1,1,2,1,1,5,2,1,1,1,3,1,1,3,1,1,1,1,2,3,1,1,3,1,1,2,4,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,2,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,3,3,1,2,2,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,4,1,1,2,1,1,1,1,1,1,2,1,1,2,3,1,2,1,1,1,1,1,1,2,1,1,1,1,1,1,3,1,1,1,1,1,1,1,3,2,1,1,1,1,1,1,1,2,1,1,2,1,3,1,4,1,1,1,1,1,1,1,1,1,1,1,1,4,1,1,1,2,2,1,1,1,1,1,1,1,1,1,2,1,1,1,2,1,3,1,2,1,1,1,1,1,1,3,1,1,1,1,1,1,3,1,1,1,1,2,1,1,1,2,1,1,1,2,1,1,1,1,1,1,2,3,1,1,2,1,1,4,1,2,1,2,1,1,2,1,1,3,1,1,2,1,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,2,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,2,1,1,3,1,2,1,1,1,1,2,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,10,4,1,5,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,1,2,1,1,1,1,2,1,1,1,1,1,1,1,1,1,2,1,1,2,2,1,1,2,4,2,1,2,1,1,1,1,2,2,1,1,1,1,2,4,1,1,1,1,3,4,1,1,1,1,1,1,1,3,1,2,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,3,1,1,1,1,1,4,1,1,1,1,1,1,1,2,2,1,1,1,1,2,1,1,1,2,2,1,1,1,1,2,1,1,5,2,1,1,1,1,8,1,2,1,1,2,1,1,1,1,2,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,2,1,1,1,2,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,3,1,2,1,1,11,2,1,1,1,1,2,1,5,1,1,1,1,1,1,1,2,1,5,3,1,2,1,1,1,1,1,1,1,1,5,1,1,1,2,1,14,1,1,1,1,1,1,1,1,1,1,4,1,2,2,1,1,1,1,1,1,2,1,1,1,2,2,1,1,1,1,1,1,1,3,1,1,1,1,5,1,1,3,1,1,4,1,1,1,1,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,2,3,1,1,4,1,3,1,1,3,1,1,1,1,2,1,1,1,1,10,2,1,1,1,1,1,1,2,3,1,2,1,1,1,1,1,2,1,1,3,1,1,3,1,1,1,1,1,1,1,1,1,4,1,1,2,2,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,2,1,1,1,1,1,1,2,1,1,1,1,4,1,1,3,1,2,1,1,1,6,1,1,1,1,1,1,1,1,1,2,1,1,4,4,1,1,1,1,1,2,1,1,1,1,2,1,1,1,1,1,1,1,5,1,1,1,3,1,1,4,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,2,1,1,3,1,2,1,1,1,1,1,1,2,2,1,1,2,1,1,1,1,1,1,1,2,3,1,4,1,2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,2,2,2,1,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,2,1,1,3,1,1,1,1,1,1,1,1,2,1,1,1,1,1,3,1,2,1,1,2,1,1,4,2,1,1,1,1,1,3,14,5,1,1,1,3,1,1,2,1,1,1,1,2,1,1,1,1,1,2,1,2,2,2,1,1,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,1,1,1,2,3,1,1,2,2,1,1,1,1,1,2,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,4,1,1,1,1,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,2,1,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,2,1,2,1,1,2,2,3,1,3,1,1,1,1,3,1,1,1,1,1,1,2,1,2,1,1,1,1,2,1,5,5,1,1,2,1,1,1,1,3,2,1,1,1,1,1,1,2,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,1,1,1,1,1,2,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2,1,18,9,2,1,1,1,4,4,2,2,1,2,3,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,2,1,2,1,1,1,2,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,1,1,1,2,1,6,1,1,7,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4,1,2,1,2,1,1,1,1,1,2,1,1,3,1,1,1,1,1,7,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,2,2,2,2,1,1,2,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,2,1,1,2,1,1,1,1,1,2,1,3,4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,3,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,2,1,2,1,1,1,1,1,1,1,1,1
,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1]
import numpy as np
mean = np.array(fre)
me = mean.mean()
dic_ = [0]
fre_ = [0]
for i in range(len(dic)):
  if fre[i] > me:
    fre_.append(fre[i])
    dic_.append(dic[i])
dic_ = dic_[1:]
fre_ = fre_[1:]
print(dic_)
print(fre_)
print(len(dic_))

"""Ta vectorian toàn bộ"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import nltk
from string import punctuation
from nltk.corpus import stopwords
from nltk.stem import SnowballStemmer
from nltk.tokenize import sent_tokenize, word_tokenize
import re
import time

t = time.time()
nltk.download('stopwords')
nltk.download('punkt')
def to_lower(text):
    return ' '.join([w.lower() for w in word_tokenize(text)])

def remove_(text):
  cleaned_text = re.sub('<[^<]+?>','', text)
  return cleaned_text
def remove_number(text):
  output = ''.join(c for c in text if not c.isdigit())
  return output
def remove_punctuation( text):
  return ''.join(c for c in text if c not in punctuation)
def remove_stop_word(text):
  stop_words = set(stopwords.words('english'))
  tokens = word_tokenize(text)
  result = [i for i in tokens if not i in stop_words]
  return result
def preprocess(text, f):
  dic, fre = filter_dic()
  i = 0
  while i < len(text):
    print(i)
    text[i] = str(text[i])
    text[i] = to_lower(text[i])
    text[i] = remove_(text[i])
    text[i] = remove_number(text[i])
    text[i] = remove_punctuation( text[i])
    text[i] = remove_stop_word(text[i])
    #tokenizer = keras.preprocessing.text.Tokenizer(filters='!"#$%&()*+,-./:;<=>?@[\]^`{|}💕~😂')
    #tokenizer.fit_on_texts(text[i])
    #text[i] = tokenizer.word_index
    #d = text[i]
    #length = len(d)
    #text[i] = np.array(d)
    #text[i] = np.array(list(d.keys()))
    j = 0
    while j < len(text[i]):
      t = text[i]
      t[j] = convert(t[j])
      if t[j] in dic:
        f.write(str(i)+'\t'+str(dic.index(t[j]))+'\t'+str(t.count(t[j]))+ '\n')
      j +=1
    i +=1
  return text
def convert(text):
  output = text
  for regex, replace in patterns.items():
    output = re.sub(regex, replace, output)
    output = re.sub(regex.upper(), replace.upper(), output)
  return output
def filter_dic():
  dic = ['lan', 'thoi', 'rat', 'la', 'thich', 'tuy', 'nam', 'trong', 'hem', 'nhung', 'de', 'tim', 'rong', 'rai', 'thoang', 'mat', 'sach', 'se', 'nhan', 'vien', 'phuc', 'vu', 'nhiet', 'tinh', 'sieu', 'thuong', 'thuc', 'don', 'phong', 'phu', 'da', 'dang', 'gia', 're', 'an', 'nem', 'hop', 'khau', 'vi', 'ngon', 'mieng', 'desert', 'ngot', 'khong', 'qua', 'ngay', 'tra', 'sua', 'uyen', 'uong', 'va', 'dung', 'minh', 'tung', 'o', 'hongkong', 'noi', 'diem', 'cho', 'chat', 'luong', 'lam', 'vao', 'toi', 'chu', 'nhat', 'co', 'band', 'hat', 'on', 'nhien', 'gian', 'tang', 'hoi', 'hep', 'ngoi', 'ra', 'via', 'he', 'do', 'ko', 'lamz', 'lau', 'du', 'khach', 'vang', 'doi', 'gan', 'p', 'moi', 'mang', 'duoc', 'ly', 'phe', 'ong', 'nay', 'chi', 'kheo', 'quang', 'voi', 'chac', 'quay', 'lai', 'nua', 'be', 'ti', 'choi', 'dong', 'nguoi', 'nen', 'chua', 'tot', 'binh', 'dac', 'biet', 'khi', 'gi', 'sac', 'order', 'dat', 'banh', 'thi', 'su', 'tiep', 'dai', 'tu', 'van', 'chuyen', 'gui', 'tuyet', 'beo', 'rau', 'cau', 'pham', 'sau', 'dip', 'sinh', 'mau', 'lon', 'chuc', 'cac', 'ban', 'phat', 'day', 'thu', 'n', 'ma', 'gio', 'review', 'luc', 'nao', 'cung', 'chay', 'vo', 'nghiep', 'luon', 'chien', 'them', 'vat', 'dia', 'dua', 'chia', 'k', 'truoc', 'nha', 'chinh', 'riet', 'roi', 'ben', 'com', 'tam', 'lun', 'trien', 'ghe', 'dep', 'nhac', 'hay', 'art', 'buoc', 'buoi', 'sang', 'hom', 'di', 'a', 'bac', 'xiu', 'yen', 'nhu', 'vay', 'dinh', 'tren', 'cuon', 'note', 'bu', 'danh', 'ghi', 'ki', 'niem', 'cua', 'rieng', 'nhieu', 've', 'hi', 'khen', 'mai', 'cha', 'che', 'gemini', 'bao', 'dj', 'luonnn', 'h', 'xuong', 'tri', 'bai', 'cat', 'khu', 'xoa', 'bar', 'bung', 'lua', 'het', 'pub', 'thay', 'khac', 'chiu', 'hon', 'tru', 'dim', 'thui', 'trog', 'ai', 'deu', 'cay', 'hoa', 'hong', 'to', 'mog', 'cuoi', 'dau', 'nhom', 'canh', 'nhin', 'cach', 'mot', 'cai', 'ke', 'giong', 'nghi', 'tha', 'neu', 'sot', 'cam', 'vui', 'ngoai', 'cf', 'may', 'hut', 'thuoc', 'so', 'phi', 'le', 'bau', 'olong', 'bun', 'que', 'vai', 'cong', 'con', 'suot', 'keu', 'nuoc', 'leo', 'nau', 'te', 'lat', 'can', 'sao', 'ay', 'lo', 'tay', 'rot', 'nap', 'buc', 'thoai', 'chieu', 'than', 'thien', 'phai', 'mon', 'dam', 'han', 'quoc', 'coca', 'nhach', 'mua', 'kekee', 'quen', 'r', 'dc', 'jelly', 'xanh', 'ah', 'kia', 'kg', 'j', 'ok', 'pho', 'sam', 'uat', 'goc', 'hoan', 'cao', 'chap', 'mi', '̀', 'nh', '̃', '́', '̣', 'bie', 'ngo', '̉', 'ng', 'c', 'loa', 'ch', 'uo', 'chai', 'the', 'vie', 'cuo', 'ta', 'xo', 'na', 'gap', 'giang', 'huong', 'luan', 'chut', 'trung', 'thanh', 'xung', 'quanh', 'ky', 'giac', 'tieng', 'goi', 'nghe', 'ua', 'anh', 'bat', 'mh', 'giam', 'hinh', '😉', 'thai', 'khoai', 'xoan', 'tekkboki', 'y', 'am', 'boss', 'lay', 'bucccc', '😂', '💕', 'tuoi', 'hueew', 'menu', 'rang', 'lich', 'bi', 'chem', 'nhe', 'mam', 'heo', 'tom', 'xay', 'chen', 'kem', 'loc', 'nguyen', 'bot', 'chin', 'mem', 'ngan', 'me', 'thit', 'it', 'hiem', 'troi', 'lu', 'keo', 'nhau', 'buon', 'ms', 'staff', 'huc', 'phan', 'yeu', 'coi', 'hoang', 'bon', 'set', 'kieu', 'kimbap', 'nan', 'truyen', 'thong', 'xi', 'sat', 'xon', 'trc', 'tap', 'perfect', 'quite', 'sofa', 'flan', 'qay', 'hen', 'ho', 'ecard', 'foody', 'bui', 'trang', 'muot', 'lui', 'thieu', 'kin', 'i', 'nv', 'lenh', 'san', 'ny', 'deo', 'ngum', 'hix', 'muon', 'tro', 'lao', 'kinh', 'bom', 'tai', 'muong', 'viet', 'daay', 'aen', 'bach', 'tuoc', 'muoi', 'nui', 'udon', 'nghin', 'giai', 'nham', 'duy', 'dieu', 'long', 'ga', 'tiec', 'chan', 'nang', 'coc', 'chuan', 'fai', 'hnay', 'giu', 'chuye', 'hap', 'thua', 'phuong', 'sashimi', 'xin', 'doc', 'ac', 'haizzz', 'karaoke', 'som', 'times', 'city', 'xem', 'quyet', 'ran', 'loai', 'chao', 'si', 'duoi', 'muc', 'ui', 'soc', 'gao', 'xot', 'em', 'sy', 'benh', 'thap', 'ty', 'xuyen', 'ung', 'rui', 'lup', 'dimsum', 'ao', 'toc', 'bam', 'gay', 'phim', 'trinh', 'bay', 'ten', '😏', 'tron', 'xua', 'vintage', 'pizza', 'xao', 'thac', 'nhuom', 'cot', 'oc', 'nhang', 'nhinh', 'gion', 'pate', 'my', 'uot', 'ngom', 'khuyen', 'ton', 'nat', 'suy', 'choet', 'combo', 'tr', 'uop', 'deep', 'vot', 'boi', 'dn', 'giat', 'mun', 'khuc', 'post', 'gung', 'comment', 'chiec', 'sai', 'xui', 'rv', 'soi', 'bhd', 'bitexco', 'dot', 'caramel', 'khan', 'bik', 'online', 'xau', 'cui', 'lac', 'sd', 'wasabi', 'xit', 'kich', 'kchiec', 'phomai', 'highland', 'thao', 'hum', 'tanh', 'hu', 'quare', 'vincom', 'ngonn', 'mie', 'matcha', 'nheo', 'mit', 'sg', 'miet', 'luot', 'thia', 'miam', 'tat', 'suong', 'design', 'cacao', 'tao', 'ksuat', 'hoanh', 'store', 'ri', 'ket', 'vuot', 'met', 'ad', 'update', 'nhay', 'bep', 'dt', 'taxi', 'khoang', 'nhah', 'zo', 'siro', 'khet', 'singapore', 'tuo', 'gon', 'trom', 'xoai', 'nhai', 'tram', 'ngeu', 'daauf', 'billiards', 'bieu', 'rieu', 'tuyen', 'cuar', 'buffee', 'thau', 'nom', '😁', 'blueberry', 'training', 'ken', 'preview', 'high', 'lach', 'sapoche', 'dzua', 'thuo', 'hoy', 'misu', 'vaoxem']
  fre = [4697, 12401, 4137, 2193, 7527, 15097, 3273, 845, 1483, 3298, 233, 8302, 5811, 848, 913, 402, 753, 3085, 887, 2977, 6363, 5372, 3748, 4110, 1441, 3608, 528, 3002, 1891, 912, 1221, 1049, 4891, 2219, 5558, 1361, 17163, 600, 2014, 340, 6450, 8412, 1680, 1663, 2414, 12612, 6398, 2249, 3307, 1792, 3886, 1260, 10312, 2536, 16937, 546, 6703, 5700, 2026, 1130, 7648, 2126, 1558, 5498, 3321, 3476, 3506, 3076, 16402, 330, 4228, 1145, 623, 3499, 1096, 5430, 2484, 5649, 4461, 175, 758, 8951, 5112, 2796, 1093, 1948, 3242, 621, 2486, 1401, 853, 4836, 1083, 5001, 2221, 302, 353, 5215, 4998, 292, 1207, 5267, 1458, 1889, 5802, 3492, 1156, 741, 564, 2706, 3146, 6635, 2708, 893, 1484, 1591, 2738, 2578, 2802, 436, 850, 1496, 4508, 12358, 1576, 499, 1079, 2963, 1943, 1023, 411, 831, 735, 753, 733, 133, 1875, 328, 968, 579, 694, 257, 2850, 8117, 261, 7128, 3730, 2749, 7235, 1647, 289, 2293, 2588, 10414, 860, 1848, 323, 3137, 854, 2428, 378, 1296, 1658, 153, 6397, 1334, 2881, 355, 3063, 1283, 1582, 1358, 2079, 378, 2383, 195, 2226, 763, 2273, 383, 402, 651, 1107, 1736, 5849, 832, 383, 547, 487, 4826, 1831, 1045, 1683, 431, 373, 486, 580, 257, 720, 198, 4227, 523, 3762, 3955, 259, 330, 1814, 1301, 1098, 2332, 1847, 246, 306, 822, 514, 1410, 470, 254, 474, 709, 1251, 496, 470, 2391, 5625, 833, 1989, 710, 2730, 372, 133, 2564, 999, 363, 874, 1246, 858, 346, 1325, 856, 187, 3878, 485, 853, 1819, 1157, 2546, 3452, 665, 596, 929, 499, 1067, 970, 2001, 799, 1433, 2871, 819, 198, 223, 1486, 489, 881, 563, 3281, 637, 256, 608, 1005, 4728, 1078, 782, 3679, 274, 276, 1085, 404, 825, 1199, 617, 724, 928, 2711, 324, 1690, 751, 428, 1224, 1063, 3368, 5839, 1196, 633, 174, 2004, 732, 1780, 598, 567, 304, 1949, 690, 146, 321, 725, 325, 1138, 2025, 1068, 630, 220, 256, 212, 1087, 275, 1906, 6448, 1241, 1405, 7731, 3876, 731, 2264, 2254, 252, 1464, 404, 832, 176, 187, 2633, 1638, 665, 278, 385, 231, 348, 570, 595, 279, 628, 1381, 1041, 268, 175, 425, 689, 619, 3547, 1088, 1415, 442, 1246, 421, 1076, 425, 1116, 373, 538, 1192, 850, 1388, 768, 613, 167, 150, 392, 976, 148, 823, 557, 505, 457, 1959, 1179, 956, 386, 264, 745, 319, 332, 2707, 212, 524, 490, 137, 718, 647, 646, 1600, 1146, 665, 385, 154, 194, 634, 210, 1038, 147, 1782, 666, 1358, 319, 148, 426, 257, 942, 137, 1052, 392, 233, 189, 142, 168, 321, 313, 138, 214, 134, 134, 749, 289, 1267, 366, 296, 1628, 315, 868, 386, 590, 262, 508, 530, 979, 839, 212, 1226, 240, 1218, 140, 457, 477, 277, 902, 148, 1814, 348, 250, 1447, 230, 339, 329, 1172, 797, 172, 508, 265, 169, 686, 950, 1577, 271, 1083, 405, 366, 216, 1532, 579, 993, 810, 375, 153, 1232, 344, 549, 395, 1914, 519, 165, 163, 526, 701, 192, 172, 1130, 181, 547, 490, 199, 595, 438, 143, 250, 464, 896, 480, 1005, 247, 173, 202, 570, 173, 264, 582, 261, 143, 480, 391, 185, 320, 549, 351, 570, 198, 149, 439, 405, 200, 680, 133, 400, 214, 149, 638, 149, 515, 218, 161, 218, 342, 240, 274, 247, 1418, 302, 258, 193, 222, 289, 282, 361, 165, 179, 160, 377, 201, 697, 258, 203, 144, 160, 154, 136, 299, 186, 161, 157, 217, 377, 204, 211, 388, 252, 258, 255, 259, 137, 285, 153, 239, 145, 184, 376, 197, 160, 206, 488, 219, 159, 187, 139, 395, 191, 209, 394, 380, 204, 567, 353, 426, 150, 297, 162, 329, 166, 306, 154, 234, 175, 325, 280, 142, 430, 295, 224, 134, 286, 136, 519, 209, 194, 211, 203, 164, 175, 253, 454, 178, 149, 138, 162, 184, 136, 180, 136, 152, 315, 297, 153, 169, 161, 138, 159, 171, 185, 316]   
  mean = np.array(fre)
  me = mean.mean()
  dic_ = [0]
  fre_ = [0]
  for i in range(len(dic)):
    if fre[i] > me:
      fre_.append(fre[i])
      dic_.append(dic[i])
  return dic_[1:], fre_[1:]
if __name__== '__main__':
  f = open('/content/vectorian.txt','w')
  patterns = {
    '[áàạãảăắ ằẳ ẵ ặâấ ầ ẩ ẫ ậ]': 'a',
    '[đ]': 'd',
    '[ìíỉĩị]': 'i',
    '[òóỏõọôồ ố ổ ỗ ộơờớởỡợ]': 'o',
    '[éèẽẻẹêế ề ể ệễ ]': 'e', 
    '[ùúủũụưừứử ữự]': 'u',
    '[ỳýỷỹỵ]': 'y'
  }
  train_X = pd.read_csv('/content/train.csv')
  text = train_X['text']
  text = preprocess(text, f)
  f.close()

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import nltk
from string import punctuation
from nltk.corpus import stopwords
from nltk.stem import SnowballStemmer
from nltk.tokenize import sent_tokenize, word_tokenize
import re
import time

t = time.time()
nltk.download('stopwords')
nltk.download('punkt')
def to_lower(text):
    return ' '.join([w.lower() for w in word_tokenize(text)])

def remove_(text):
  cleaned_text = re.sub('<[^<]+?>','', text)
  return cleaned_text
def remove_number(text):
  output = ''.join(c for c in text if not c.isdigit())
  return output
def remove_punctuation( text):
  return ''.join(c for c in text if c not in punctuation)
def remove_stop_word(text):
  stop_words = set(stopwords.words('english'))
  tokens = word_tokenize(text)
  result = [i for i in tokens if not i in stop_words]
  return result
def preprocess(text, f):
  dic, fre = filter_dic()
  i = 0
  while i < len(text):
    print(i)
    text[i] = str(text[i])
    text[i] = to_lower(text[i])
    text[i] = remove_(text[i])
    text[i] = remove_number(text[i])
    text[i] = remove_punctuation( text[i])
    text[i] = remove_stop_word(text[i])
    #tokenizer = keras.preprocessing.text.Tokenizer(filters='!"#$%&()*+,-./:;<=>?@[\]^`{|}💕~😂')
    #tokenizer.fit_on_texts(text[i])
    #text[i] = tokenizer.word_index
    #d = text[i]
    #length = len(d)
    #text[i] = np.array(d)
    #text[i] = np.array(list(d.keys()))
    j = 0
    while j < len(text[i]):
      t = text[i]
      t[j] = convert(t[j])
      if t[j] in dic:
        f.write(str(i)+'\t'+str(dic.index(t[j]))+'\t'+str(t.count(t[j]))+ '\n')
      j +=1
    i +=1
  return text
def convert(text):
  output = text
  for regex, replace in patterns.items():
    output = re.sub(regex, replace, output)
    output = re.sub(regex.upper(), replace.upper(), output)
  return output
def filter_dic():
  dic = ['lan', 'thoi', 'rat', 'la', 'thich', 'tuy', 'nam', 'trong', 'hem', 'nhung', 'de', 'tim', 'rong', 'rai', 'thoang', 'mat', 'sach', 'se', 'nhan', 'vien', 'phuc', 'vu', 'nhiet', 'tinh', 'sieu', 'thuong', 'thuc', 'don', 'phong', 'phu', 'da', 'dang', 'gia', 're', 'an', 'nem', 'hop', 'khau', 'vi', 'ngon', 'mieng', 'desert', 'ngot', 'khong', 'qua', 'ngay', 'tra', 'sua', 'uyen', 'uong', 'va', 'dung', 'minh', 'tung', 'o', 'hongkong', 'noi', 'diem', 'cho', 'chat', 'luong', 'lam', 'vao', 'toi', 'chu', 'nhat', 'co', 'band', 'hat', 'on', 'nhien', 'gian', 'tang', 'hoi', 'hep', 'ngoi', 'ra', 'via', 'he', 'do', 'ko', 'lamz', 'lau', 'du', 'khach', 'vang', 'doi', 'gan', 'p', 'moi', 'mang', 'duoc', 'ly', 'phe', 'ong', 'nay', 'chi', 'kheo', 'quang', 'voi', 'chac', 'quay', 'lai', 'nua', 'be', 'ti', 'choi', 'dong', 'nguoi', 'nen', 'chua', 'tot', 'binh', 'dac', 'biet', 'khi', 'gi', 'sac', 'order', 'dat', 'banh', 'thi', 'su', 'tiep', 'dai', 'tu', 'van', 'chuyen', 'gui', 'tuyet', 'beo', 'rau', 'cau', 'pham', 'sau', 'dip', 'sinh', 'mau', 'lon', 'chuc', 'cac', 'ban', 'phat', 'day', 'thu', 'n', 'ma', 'gio', 'review', 'luc', 'nao', 'cung', 'chay', 'vo', 'nghiep', 'luon', 'chien', 'them', 'vat', 'dia', 'dua', 'chia', 'k', 'truoc', 'nha', 'chinh', 'riet', 'roi', 'ben', 'com', 'tam', 'lun', 'trien', 'ghe', 'dep', 'nhac', 'hay', 'art', 'buoc', 'buoi', 'sang', 'hom', 'di', 'a', 'bac', 'xiu', 'yen', 'nhu', 'vay', 'dinh', 'tren', 'cuon', 'note', 'bu', 'danh', 'ghi', 'ki', 'niem', 'cua', 'rieng', 'nhieu', 've', 'hi', 'khen', 'mai', 'cha', 'che', 'gemini', 'bao', 'dj', 'luonnn', 'h', 'xuong', 'tri', 'bai', 'cat', 'khu', 'xoa', 'bar', 'bung', 'lua', 'het', 'pub', 'thay', 'khac', 'chiu', 'hon', 'tru', 'dim', 'thui', 'trog', 'ai', 'deu', 'cay', 'hoa', 'hong', 'to', 'mog', 'cuoi', 'dau', 'nhom', 'canh', 'nhin', 'cach', 'mot', 'cai', 'ke', 'giong', 'nghi', 'tha', 'neu', 'sot', 'cam', 'vui', 'ngoai', 'cf', 'may', 'hut', 'thuoc', 'so', 'phi', 'le', 'bau', 'olong', 'bun', 'que', 'vai', 'cong', 'con', 'suot', 'keu', 'nuoc', 'leo', 'nau', 'te', 'lat', 'can', 'sao', 'ay', 'lo', 'tay', 'rot', 'nap', 'buc', 'thoai', 'chieu', 'than', 'thien', 'phai', 'mon', 'dam', 'han', 'quoc', 'coca', 'nhach', 'mua', 'kekee', 'quen', 'r', 'dc', 'jelly', 'xanh', 'ah', 'kia', 'kg', 'j', 'ok', 'pho', 'sam', 'uat', 'goc', 'hoan', 'cao', 'chap', 'mi', '̀', 'nh', '̃', '́', '̣', 'bie', 'ngo', '̉', 'ng', 'c', 'loa', 'ch', 'uo', 'chai', 'the', 'vie', 'cuo', 'ta', 'xo', 'na', 'gap', 'giang', 'huong', 'luan', 'chut', 'trung', 'thanh', 'xung', 'quanh', 'ky', 'giac', 'tieng', 'goi', 'nghe', 'ua', 'anh', 'bat', 'mh', 'giam', 'hinh', '😉', 'thai', 'khoai', 'xoan', 'tekkboki', 'y', 'am', 'boss', 'lay', 'bucccc', '😂', '💕', 'tuoi', 'hueew', 'menu', 'rang', 'lich', 'bi', 'chem', 'nhe', 'mam', 'heo', 'tom', 'xay', 'chen', 'kem', 'loc', 'nguyen', 'bot', 'chin', 'mem', 'ngan', 'me', 'thit', 'it', 'hiem', 'troi', 'lu', 'keo', 'nhau', 'buon', 'ms', 'staff', 'huc', 'phan', 'yeu', 'coi', 'hoang', 'bon', 'set', 'kieu', 'kimbap', 'nan', 'truyen', 'thong', 'xi', 'sat', 'xon', 'trc', 'tap', 'perfect', 'quite', 'sofa', 'flan', 'qay', 'hen', 'ho', 'ecard', 'foody', 'bui', 'trang', 'muot', 'lui', 'thieu', 'kin', 'i', 'nv', 'lenh', 'san', 'ny', 'deo', 'ngum', 'hix', 'muon', 'tro', 'lao', 'kinh', 'bom', 'tai', 'muong', 'viet', 'daay', 'aen', 'bach', 'tuoc', 'muoi', 'nui', 'udon', 'nghin', 'giai', 'nham', 'duy', 'dieu', 'long', 'ga', 'tiec', 'chan', 'nang', 'coc', 'chuan', 'fai', 'hnay', 'giu', 'chuye', 'hap', 'thua', 'phuong', 'sashimi', 'xin', 'doc', 'ac', 'haizzz', 'karaoke', 'som', 'times', 'city', 'xem', 'quyet', 'ran', 'loai', 'chao', 'si', 'duoi', 'muc', 'ui', 'soc', 'gao', 'xot', 'em', 'sy', 'benh', 'thap', 'ty', 'xuyen', 'ung', 'rui', 'lup', 'dimsum', 'ao', 'toc', 'bam', 'gay', 'phim', 'trinh', 'bay', 'ten', '😏', 'tron', 'xua', 'vintage', 'pizza', 'xao', 'thac', 'nhuom', 'cot', 'oc', 'nhang', 'nhinh', 'gion', 'pate', 'my', 'uot', 'ngom', 'khuyen', 'ton', 'nat', 'suy', 'choet', 'combo', 'tr', 'uop', 'deep', 'vot', 'boi', 'dn', 'giat', 'mun', 'khuc', 'post', 'gung', 'comment', 'chiec', 'sai', 'xui', 'rv', 'soi', 'bhd', 'bitexco', 'dot', 'caramel', 'khan', 'bik', 'online', 'xau', 'cui', 'lac', 'sd', 'wasabi', 'xit', 'kich', 'kchiec', 'phomai', 'highland', 'thao', 'hum', 'tanh', 'hu', 'quare', 'vincom', 'ngonn', 'mie', 'matcha', 'nheo', 'mit', 'sg', 'miet', 'luot', 'thia', 'miam', 'tat', 'suong', 'design', 'cacao', 'tao', 'ksuat', 'hoanh', 'store', 'ri', 'ket', 'vuot', 'met', 'ad', 'update', 'nhay', 'bep', 'dt', 'taxi', 'khoang', 'nhah', 'zo', 'siro', 'khet', 'singapore', 'tuo', 'gon', 'trom', 'xoai', 'nhai', 'tram', 'ngeu', 'daauf', 'billiards', 'bieu', 'rieu', 'tuyen', 'cuar', 'buffee', 'thau', 'nom', '😁', 'blueberry', 'training', 'ken', 'preview', 'high', 'lach', 'sapoche', 'dzua', 'thuo', 'hoy', 'misu', 'vaoxem']
  fre = [4697, 12401, 4137, 2193, 7527, 15097, 3273, 845, 1483, 3298, 233, 8302, 5811, 848, 913, 402, 753, 3085, 887, 2977, 6363, 5372, 3748, 4110, 1441, 3608, 528, 3002, 1891, 912, 1221, 1049, 4891, 2219, 5558, 1361, 17163, 600, 2014, 340, 6450, 8412, 1680, 1663, 2414, 12612, 6398, 2249, 3307, 1792, 3886, 1260, 10312, 2536, 16937, 546, 6703, 5700, 2026, 1130, 7648, 2126, 1558, 5498, 3321, 3476, 3506, 3076, 16402, 330, 4228, 1145, 623, 3499, 1096, 5430, 2484, 5649, 4461, 175, 758, 8951, 5112, 2796, 1093, 1948, 3242, 621, 2486, 1401, 853, 4836, 1083, 5001, 2221, 302, 353, 5215, 4998, 292, 1207, 5267, 1458, 1889, 5802, 3492, 1156, 741, 564, 2706, 3146, 6635, 2708, 893, 1484, 1591, 2738, 2578, 2802, 436, 850, 1496, 4508, 12358, 1576, 499, 1079, 2963, 1943, 1023, 411, 831, 735, 753, 733, 133, 1875, 328, 968, 579, 694, 257, 2850, 8117, 261, 7128, 3730, 2749, 7235, 1647, 289, 2293, 2588, 10414, 860, 1848, 323, 3137, 854, 2428, 378, 1296, 1658, 153, 6397, 1334, 2881, 355, 3063, 1283, 1582, 1358, 2079, 378, 2383, 195, 2226, 763, 2273, 383, 402, 651, 1107, 1736, 5849, 832, 383, 547, 487, 4826, 1831, 1045, 1683, 431, 373, 486, 580, 257, 720, 198, 4227, 523, 3762, 3955, 259, 330, 1814, 1301, 1098, 2332, 1847, 246, 306, 822, 514, 1410, 470, 254, 474, 709, 1251, 496, 470, 2391, 5625, 833, 1989, 710, 2730, 372, 133, 2564, 999, 363, 874, 1246, 858, 346, 1325, 856, 187, 3878, 485, 853, 1819, 1157, 2546, 3452, 665, 596, 929, 499, 1067, 970, 2001, 799, 1433, 2871, 819, 198, 223, 1486, 489, 881, 563, 3281, 637, 256, 608, 1005, 4728, 1078, 782, 3679, 274, 276, 1085, 404, 825, 1199, 617, 724, 928, 2711, 324, 1690, 751, 428, 1224, 1063, 3368, 5839, 1196, 633, 174, 2004, 732, 1780, 598, 567, 304, 1949, 690, 146, 321, 725, 325, 1138, 2025, 1068, 630, 220, 256, 212, 1087, 275, 1906, 6448, 1241, 1405, 7731, 3876, 731, 2264, 2254, 252, 1464, 404, 832, 176, 187, 2633, 1638, 665, 278, 385, 231, 348, 570, 595, 279, 628, 1381, 1041, 268, 175, 425, 689, 619, 3547, 1088, 1415, 442, 1246, 421, 1076, 425, 1116, 373, 538, 1192, 850, 1388, 768, 613, 167, 150, 392, 976, 148, 823, 557, 505, 457, 1959, 1179, 956, 386, 264, 745, 319, 332, 2707, 212, 524, 490, 137, 718, 647, 646, 1600, 1146, 665, 385, 154, 194, 634, 210, 1038, 147, 1782, 666, 1358, 319, 148, 426, 257, 942, 137, 1052, 392, 233, 189, 142, 168, 321, 313, 138, 214, 134, 134, 749, 289, 1267, 366, 296, 1628, 315, 868, 386, 590, 262, 508, 530, 979, 839, 212, 1226, 240, 1218, 140, 457, 477, 277, 902, 148, 1814, 348, 250, 1447, 230, 339, 329, 1172, 797, 172, 508, 265, 169, 686, 950, 1577, 271, 1083, 405, 366, 216, 1532, 579, 993, 810, 375, 153, 1232, 344, 549, 395, 1914, 519, 165, 163, 526, 701, 192, 172, 1130, 181, 547, 490, 199, 595, 438, 143, 250, 464, 896, 480, 1005, 247, 173, 202, 570, 173, 264, 582, 261, 143, 480, 391, 185, 320, 549, 351, 570, 198, 149, 439, 405, 200, 680, 133, 400, 214, 149, 638, 149, 515, 218, 161, 218, 342, 240, 274, 247, 1418, 302, 258, 193, 222, 289, 282, 361, 165, 179, 160, 377, 201, 697, 258, 203, 144, 160, 154, 136, 299, 186, 161, 157, 217, 377, 204, 211, 388, 252, 258, 255, 259, 137, 285, 153, 239, 145, 184, 376, 197, 160, 206, 488, 219, 159, 187, 139, 395, 191, 209, 394, 380, 204, 567, 353, 426, 150, 297, 162, 329, 166, 306, 154, 234, 175, 325, 280, 142, 430, 295, 224, 134, 286, 136, 519, 209, 194, 211, 203, 164, 175, 253, 454, 178, 149, 138, 162, 184, 136, 180, 136, 152, 315, 297, 153, 169, 161, 138, 159, 171, 185, 316]   
  mean = np.array(fre)
  me = mean.mean()
  dic_ = [0]
  fre_ = [0]
  for i in range(len(dic)):
    if fre[i] > me:
      fre_.append(fre[i])
      dic_.append(dic[i])
  return dic_[1:], fre_[1:]
if __name__== '__main__':
  f = open('/content/vectorian_test.txt','w')
  patterns = {
    '[áàạãảăắ ằẳ ẵ ặâấ ầ ẩ ẫ ậ]': 'a',
    '[đ]': 'd',
    '[ìíỉĩị]': 'i',
    '[òóỏõọôồ ố ổ ỗ ộơờớởỡợ]': 'o',
    '[éèẽẻẹêế ề ể ệễ ]': 'e', 
    '[ùúủũụưừứử ữự]': 'u',
    '[ỳýỷỹỵ]': 'y'
  }
  train_X = pd.read_csv('/content/test.csv')
  text = train_X['text']
  text = preprocess(text, f)
  f.close()

from __future__ import print_function
import numpy as np
from scipy.sparse import coo_matrix
from sklearn.naive_bayes import MultinomialNB, BernoulliNB
from sklearn.metrics import accuracy_score
from sklearn.model_selection import GridSearchCV
import matplotlib.pyplot as plt
import pandas as pd
nwords = 637
def read_data(paths, size):
  data = np.zeros((size, nwords))
  with open(paths) as f:
    content = f.readlines()
  content = [x.strip() for x in content]
  dat = np.zeros((len(content), 3), dtype = int)
  for i, line in enumerate(content):
    a = line.split('\t')
    dat[i, :] = np.array([int(a[0]), int(a[1]), int(a[2])])
    t = dat[i, :]
    data[t[0], t[1]] = t[2]
  return data
data = read_data('/content/vectorian.txt', 27000)
data_test = read_data('/content/vectorian_test.txt', 3000)
t = 20000
t_ = [0]
train_X = pd.read_csv('/content/train.csv')
labels = train_X['class']
learning_curve_train = [0]
learning_curve_validation = [0]
for i in range(5):
  data_train = data[:t]
  data_validation = data[t:]
  params = {'alpha': [0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3]}
  clf = MultinomialNB()
  clf = GridSearchCV(clf, params, cv = 3)
  clf.fit(data_train, labels[:t])
  best_clf = clf.best_estimator_
  y_pred = best_clf.predict(data[:t])
  y_pred_validation = best_clf.predict(data[t:])
  y_pred_test = best_clf.predict(data_test)
  print("traing size: " ,len(labels[:t])," accuracy_train_set: ",accuracy_score(labels[:t], y_pred)*100,'%')
  print(" accuracy_validation_set: ",accuracy_score(labels[t:], y_pred_validation)*100,'%')
  print(best_clf)
  learning_curve_train.append(accuracy_score(labels[:t], y_pred)*100)
  learning_curve_validation.append(accuracy_score(labels[t:], y_pred_validation)*100)
  t_.append(t)
  t += i*1000
learning_curve_train = learning_curve_train[1:]
learning_curve_validation = learning_curve_validation[1:]
t_ = t_[1:]
plt.plot(t_, learning_curve_train ,'red', label = 'train_accuracy')
plt.plot(t_, learning_curve_validation,'blue', label = 'validation_accuracy') 
plt.title('Learning curve ')
plt.xlabel('traning example')
plt.ylabel('accuracy')
plt.legend()
plt.show()
'''
id_df = pd.read_csv('/content/test.csv')
id_ = id_df['id']
df = pd.DataFrame({'id': id_, 'class': y_pred_test})
df.to_csv('sample_submission.csv')
'''

"""** Dữa vào đường Learning curve này ta chọn điểm hội tụ của quá trình training và kiểm thử trên 2 tập train và validation set bằng phương pháp early stop ta chọn tập train có kích thước 215000 điểm dữ liệu và tập test có 5500 điểm dữ liệu.

*** thực hiện training lại với bộ training set và validation set như trên và ghi vào file sample_submission_naive.csv
*** Tối ưu hóa bộ tham số naive đã chọn.
"""

from __future__ import print_function
import numpy as np
from scipy.sparse import coo_matrix
from sklearn.naive_bayes import MultinomialNB, BernoulliNB
from sklearn.metrics import accuracy_score
from sklearn.model_selection import GridSearchCV
import matplotlib.pyplot as plt
import pandas as pd
nwords = 637
def read_data(paths, size):
  data = np.zeros((size, nwords))
  with open(paths) as f:
    content = f.readlines()
  content = [x.strip() for x in content]
  dat = np.zeros((len(content), 3), dtype = int)
  for i, line in enumerate(content):
    a = line.split('\t')
    dat[i, :] = np.array([int(a[0]), int(a[1]), int(a[2])])
    t = dat[i, :]
    data[t[0], t[1]] = t[2]
  return data
data = read_data('/content/vectorian.txt', 27000)
data_test = read_data('/content/vectorian_test.txt', 3000)
t = 21500
train_X = pd.read_csv('/content/train.csv')
labels = train_X['class']
data_train = data[:t]
data_validation = data[t:]
params = {'alpha': [0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3]}
clf = MultinomialNB()
clf = GridSearchCV(clf, params, cv = 3)
clf.fit(data_train, labels[:t])
best_clf = clf.best_estimator_
y_pred = best_clf.predict(data[:t])
y_pred_validation = best_clf.predict(data[t:])
y_pred_test = best_clf.predict(data_test)
print("traing size: " ,len(labels[:t])," accuracy_train_set: ",accuracy_score(labels[:t], y_pred)*100,'%')
print(" accuracy_validation_set: ",accuracy_score(labels[t:], y_pred_validation)*100,'%')
print(best_clf)
 
id_df = pd.read_csv('/content/test.csv')
id_ = np.array(id_df['id'])
df = pd.DataFrame({'id': id_, 'class': y_pred_test})
df.to_csv('sample_submission_naive.csv')

"""Với training size 21500 thì cả training và validation đều ở mức 76,..%. So với nhu cầu thực tế thì con số này không cao. Với accuracy nhỏ như thế này phụ thuộc rất nhiều vào dictionary mà ta đã thực hiện ở những bước trên. Đồng thời cũng do quá trình tiền xữ lí text. Nếu có nhiều thời gian tôi tin chắc mình sẽ cải thiện được điều này.

Dựa vào những gì đã phân tích ở trên tôi sẽ chuyển hướng sang SVM kernel để thử độ chính xác model. Do thời gian giới hạn nên tôi cũng không thể thử models nhiều.
"""

from __future__ import print_function
import numpy as np
from scipy.sparse import coo_matrix
from sklearn.naive_bayes import MultinomialNB, BernoulliNB
from sklearn.metrics import accuracy_score
from sklearn.model_selection import GridSearchCV
import matplotlib.pyplot as plt
from sklearn import svm
import pandas as pd
nwords = 637
def read_data(paths, size):
  data = np.zeros((size, nwords))
  with open(paths) as f:
    content = f.readlines()
  content = [x.strip() for x in content]
  dat = np.zeros((len(content), 3), dtype = int)
  for i, line in enumerate(content):
    a = line.split('\t')
    dat[i, :] = np.array([int(a[0]), int(a[1]), int(a[2])])
    t = dat[i, :]
    data[t[0], t[1]] = t[2]
  return data
data = read_data('/content/vectorian.txt', 27000)
data_test = read_data('/content/vectorian_test.txt', 3000)
t = 21500
train_X = pd.read_csv('/content/train.csv')
labels = train_X['class']
data_train = data[:t]
data_validation = data[t:]
params = {'C': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2],
          'kernel': ['rbf','poly', 'sigmoid'],
          'gamma': np.linspace(0.1, 1, 5)
         }
clf = svm.SVC()
clf = GridSearchCV(clf, params, cv = 5)
clf.fit(data_train, labels[:t])
best_clf = clf.best_estimator_
y_pred = best_clf.predict(data[:t])
y_pred_validation = best_clf.predict(data[t:])
y_pred_test = best_clf.predict(data_test)
print("traing size: " ,len(labels[:t])," accuracy_train_set: ",accuracy_score(labels[:t], y_pred)*100,'%')
print(" accuracy_validation_set: ",accuracy_score(labels[t:], y_pred_validation)*100,'%')
print(best_clf)
 
id_df = pd.read_csv('/content/test.csv')
id_ = id_df['id']
df = pd.DataFrame({'id': id_, 'class': y_pred_test})
df.to_csv('sample_submission_svm.csv')

"""Kết Luận: Nhìn chung với hướng đi này hiện tại tôi vẫn chưa có được kết quả của SVM  nhưng tôi tin rằng models này mang nhiểu triển vọng với độ chính xác cao hơn multinomial naive bayes.

*** Hướng khắc phục nâng cao độ chính xác models:
- Cần xây dựng bộ từ điển chuẩn hơn. Có thể nâng số từ trong từ điển lên.
- Hướng khác có thể  xây dựng cả 1 model tiền xữ lí cho tiếng việt mà không cần loại bỏ tất cả các dấu.
- Kết hợp NLP để giữ lại những từ ghép, cụm từ mang nhiều ý nghĩa
*** Trong khuôn khổ bài Task chỉ có vỏn vẹn làm trong 2 ngày nên tôi cũng không thử được nhiều bộ tham số và nhiều mô hình khác.
"""

from google.colab import drive
drive.mount('/content/drive')